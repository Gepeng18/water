[{"file_id":12,"file_type":2,"tag":"_code","label":"tml","path":"/_code/java_model","rank":-1,"is_staticize":true,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"freemarker","content_type":"","content":"import lombok.Data;\nimport java.util.*;\n\n@Data\npublic class ${table_camel!}Model {\n    \n    <#list fields!! as f>\n  /** ${(f.comment)!} */\n    public ${(f.type)!} ${(f.field)!};\n    </#list>\n\n}","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1579084042000,"update_fulltime":1622086239000,"use_whitelist":null},{"file_id":13,"file_type":0,"tag":"sdk_water","label":"hook.start","path":"/sdk_water/_init.jsx","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"if(__global.water && __global.water.ver==1){\n    return {msg:'old'};\n}\n\n// 不带 var 开头的变量为引擎全局变量\n__global.water = {ver:2};\n\nwater = __global.water;\n    \nWaterClient = Java.type('org.noear.water.WaterClient');\nWaterProxy  = Java.type('org.noear.water.WaterProxy');\n\nwater.client = WaterClient;\nwater.proxy  = WaterProxy;\n\nwater.cfg = function(tagKey){return WaterClient.Config.getByTagKey(tagKey)};\nwater.db  = function(tagKey){return water.cfg(tagKey).getDb()};\nwater.rd  = function(tagKey,i){return water.cfg(tagKey).getRd(i)};\nwater.mg  = function(tagKey,c){return water.cfg(tagKey).getMg(c)};\nwater.updateCache = function(tags){WaterClient.Notice.updateCache(tags)};\n\nwater.job = function(service,job){var rst = WaterProxy.job(service,job); XUtil.log(\"Job return: \"+rst); if('OK' != rst){throw \"Job return: \"+rst;}else{return rst;}}\n\nwater.call = function(service,fun,args){if(!args){args={}} return WaterProxy.call(service,fun,args);};\n\nwater.faas = function(path,args){if(!args){args={}} return WaterProxy.paas(path,args)};\nwater.raas = function(path,args){var args2={};if(args){for(var k in args){var v=args[k];if(v){if(v instanceof Object){args2[k]=JSON.stringify(v)}else{args2[k]=v}}}}return WaterProxy.raas(path,args2)};\nwater.paas = function(path,args){ return water.faas(path, args);};\n\nwater.logTrace = function(logger,data){ return WaterProxy.logTrace(logger, data);};\nwater.logDebug = function(logger,data){ return WaterProxy.logDebug(logger, data);};\nwater.logInfo  = function(logger,data){ return WaterProxy.logInfo(logger, data); };\nwater.logWarn  = function(logger,data){ return WaterProxy.logWarn(logger, data); };\nwater.logError = function(logger,data){ return WaterProxy.logError(logger, data);};\n\n\nwater.heihei = function(target,msg){return WaterClient.Notice.heihei(target, msg);};\n\nwater.sendMessage = function(topic,message){ return WaterClient.Message.sendMessage(topic, message); }\n\nLocalDate = Java.type('java.time.LocalDate');\nLocalTime = Java.type('java.time.LocalTime');\nLocalDateTime = Java.type('java.time.LocalDateTime');\n\n\nreturn 'OK';","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1579159438000,"update_fulltime":1636256541000,"use_whitelist":""},{"file_id":14,"file_type":0,"tag":"sdk_water","label":"","path":"/sdk_water/_test.jsx","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"// return water.db('water/water')\n//             .table('water_cfg_properties')\n//             .limit(1)\n//             .select('*').getMap();\n\n\n\nlet list = water.db('water/water')\n            .table('water_cfg_properties')\n            .limit(4)\n            .select('*')\n            .getMapList();\n            \nreturn list;            \n            \n// for(let m in list){\n//     if(m == 0){\n//     return '0';\n//     }\n// }\n\n// return 'OK2';\n\n","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1579161893000,"update_fulltime":1635944849000,"use_whitelist":null},{"file_id":15,"file_type":0,"tag":"sdk_rock","label":"hook.start","path":"/sdk_rock/_init.jsx","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"if(__global.rock && __global.rock.ver==2){\n    return {msg:'old'};\n}\n\n// 不带 var 开头的变量为引擎全局变量\n__global.rock = {ver:1};\n\nrock = __global.rock;\n    \nRockClient = Java.type('sponge.rock.RockClient');\nRockUtil   = Java.type('sponge.rock.RockUtil');\n\nRockClient.tryInit(cache);\n\n\nrock.client = RockClient;\nrock.util   = RockUtil;\n\nrock.app = function(appID){\n    return RockClient.getApp(appID)\n};\n\nrock.cmd = function(service,cmd,args){\n    var appID  = args.app;\n    var appVer = args.ver;\n    \n    var appKey = RockClient.getApp(appID).app_key;\n\n    var p = JSON.stringify(args.data);\n\n    var token = cmd + \"#\" + p + \"#\" + appKey;\n    var k = appID + \".\" + appVer + \".\" + XUtil.sha1(token, \"UTF-8\");\n\n\n    var form = XUtil.newMap();\n\n    form.put(\"p\", p);\n    form.put(\"k\", k);\n    form.put(\"cmd\", cmd);\n\n    return WaterProxy.call(service, cmd, form); \n};\n\nrock.api = function(service,fun,args){\n    return WaterProxy.call(service, fun, args);//WaterProxy\n};\n\nrock.newID = function(group,key,times){\n    return rock.client.newID(group, key, times);\n};\n\n\n\n","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1579165471000,"update_fulltime":1592450547000,"use_whitelist":null},{"file_id":16,"file_type":0,"tag":"sdk_rock","label":"","path":"/sdk_rock/_test.jsx","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"// return rock.app(1).app_key;\n\nlet id = rock.newID('LOG_ID', 'sword_stats_overview', 60 * 60 * 24 * 365); \n\nXUtil.log('new_id:'+id);\n\nreturn id;","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1579165637000,"update_fulltime":1590474731000,"use_whitelist":null},{"file_id":24,"file_type":2,"tag":"_code","label":"","path":"/_code/java_model_ibinder","rank":-1,"is_staticize":true,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"freemarker","content_type":"","content":"import lombok.Getter;\nimport lombok.Setter;\nimport org.noear.weed.GetHandlerEx;\nimport org.noear.weed.IBinder;\nimport java.math.BigDecimal;\nimport java.util.*;\n\n@Getter\n@Setter\npublic class ${table_camel!}Model implements IBinder {\n    \n    <#list fields!! as f>\n /** ${(f.comment)!} */\n    public ${(f.type)!} ${(f.field)!};\n    </#list>\n\n    @Override\n public void bind(GetHandlerEx s) {\n        <#list fields as f>\n        ${(f.field)!} = s.get(\"${(f.field)!}\").value(${(f.def)!});\n        </#list>\n }\n \n  @Override\n public IBinder clone() {\n    return new ${table_camel!}Model();\n  }\n\n}","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1579243558000,"update_fulltime":1597824906000,"use_whitelist":null},{"file_id":25,"file_type":2,"tag":"_code","label":"","path":"/_code/java_edit","rank":0,"is_staticize":true,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"freemarker","content_type":"","content":"public static void edit${table_camel!} (<#list fields!! as f>${(f.type)!} ${(f.field)!}<#sep>,\n                             </#sep></#list>) throws SQLException {\n                                 \n    DbTableQuery query = db().table(\"${tb!}\")<#list fields!! as f><#if (f.field)! != pri_key!>.set(\"${(f.field)!}\", ${(f.field)!})</#if><#sep>\n                             </#sep></#list>;\n\n    if (${pri_key!} > 0) {\n        query.where(\"${pri_key!} = ?\", ${pri_key!})\n             .update();\n    } else {\n        query.insert();\n    }\n\n}\n","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1579243589000,"update_fulltime":1579243597000,"use_whitelist":null},{"file_id":26,"file_type":2,"tag":"_code","label":"","path":"/_code/java_edit2","rank":0,"is_staticize":true,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"freemarker","content_type":"","content":"public static void edit${table_camel!} (${table_camel!}Model m) throws SQLException {\n                                 \n    DbTableQuery qr = db().table(\"${tb!}\")\n                          .setEntity(m);\n\n    if (${pri_key!} > 0) {\n        qr.where(\"${pri_key!} = ?\", ${pri_key!})\n          .update();\n    } else {\n        qr.insert();\n    }\n\n}\n","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1579243611000,"update_fulltime":1579243622000,"use_whitelist":null},{"file_id":27,"file_type":2,"tag":"_code","label":"","path":"/_code/java_crud","rank":0,"is_staticize":true,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"freemarker","content_type":"","content":"public static void save${table_camel!} (${table_camel!}Model m) throws Exception {\n                                 \n    DbTableQuery qr = db().table(\"${tb!}\")\n                          .setEntity(m);\n\n    if (m.${pri_key!} > 0) {\n        qr.where(\"${pri_key!} = ?\", m.${pri_key!})\n          .update();\n    } else {\n        qr.set(\"operator\",Session.current().getUserName())\n          .set(\"log_date\",Datetime.Now().getDate())\n          .set(\"log_fulltime\",Datetime.Now().getFullTime())\n          .insert();\n    }\n}\n\npublic static void del${table_camel!} (int ${pri_key!}) throws SQLException {\n                                 \n    db().table(\"${tb!}\")\n        .where(\"${pri_key!} = ?\", ${pri_key!})\n        .delete();\n}\n\npublic static ${table_camel!}Model get${table_camel!} (int ${pri_key!}) throws SQLException {\n                                 \n    return db().table(\"${tb!}\")\n              .where(\"${pri_key!} = ?\", ${pri_key!})\n              .orderBy(\"log_fulltime desc\")\n              .limit(1)\n              .select(\"*\")\n              .getItem(new ${table_camel!}Model());\n}\n\n\npublic static List<${table_camel!}Model> get${table_camel!}List (${table_camel!}Model m) throws SQLException {\n                                 \n    return db().table(\"${tb!}\")\n              .where(\"1=1\")\n              .orderBy(\"log_fulltime desc\")\n              .select(\"*\")\n              .getList(new ${table_camel!}Model());\n}\n\n\npublic static List<${table_camel!}Model> get${table_camel!}ListByPage (${table_camel!}Model m, PageModel pageModel) throws SQLException {\n                                 \n    DbTableQuery query = db().table(\"${tb!}\")\n                        .where(\"1=1\");\n    if (pageModel != null) {\n      int start = (pageModel.page - 1) * pageModel.pageSize;\n      DbTableQuery queryCount = query;\n      pageModel.setRowCount(queryCount.select(\"count(*)\").getCount());\n      return query\n          .orderBy(\"log_fulltime desc\")\n          .limit(start, pageModel.pageSize)\n          .select(\"*\")\n          .getList(new ${table_camel!}Model());\n    } else {\n      return query.orderBy(\"log_fulltime desc\").select(\"*\").getList(new ${table_camel!}Model());\n    }          \n}\n\n\n\nimport lombok.Getter;\nimport lombok.Setter;\n\n@Getter\n@Setter\npublic class PageModel {\n\n    public Integer page;\n    public Integer pageSize;\n    public long    rowCount;\n\n  public PageModel() { }\n\n  public PageModel(Integer page, Integer pageSize) {\n    this.page = (page == null || page == 0)?1:page;\n    this.pageSize = (pageSize == null || pageSize == 0)?10:pageSize;\n  }\n}\n\n\n","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1579243635000,"update_fulltime":1579243647000,"use_whitelist":null},{"file_id":28,"file_type":2,"tag":"_code","label":"","path":"/_code/java_insert","rank":0,"is_staticize":true,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"freemarker","content_type":"","content":"import noear.weed.DbQueryProcedure;\nimport webapp.Config;\n\npublic class ${tb!}_add extends DbQueryProcedure {\n\n    <#list fields!! as f>\n    public ${(f.type)!} ${(f.field)!};\n    </#list>\n\n    public ${tb!}_add() {\n\n        super(Config.${key!});\n\n        sql(\"INSERT INTO `${tb!}` (<#list fields!! as f>`${(f.field)!}`<#sep>, </#sep></#list>)\" +\n            \" VALUES (<#list fields!! as f>@${(f.field)!}<#sep>,  </#sep></#list>);\");\n\n        <#list fields!! as f>\n        set(\"@${(f.field)!}\", () -> ${(f.field)!});\n        </#list>\n\n    }\n\n}\n","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1579243668000,"update_fulltime":1579243674000,"use_whitelist":null},{"file_id":29,"file_type":2,"tag":"_code","label":"","path":"/_code/paas_stats_save","rank":0,"is_staticize":true,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"freemarker","content_type":"","content":"function insertOrUpdateResult(target_date, <#list fields!! as f><#if f.field != pri_key>${(f.field)!}<#sep>, </#sep></#if></#list>) {\n    <#list fields!! as f>\n    <#if f.field != pri_key>\n    if (!${f.field}) {\n    ${f.field} = 0;\n    }\n    </#if>\n    </#list>\n\n  var is_exist = water\n    .db(\"${tag}.${key}\")\n    .table(\"${tb}\")\n   .where(\"target_date = ?\", target_date)\n    .selectCount();\n \n  if (is_exist && 0 < is_exist) {\n   water\n            .db(\"${tag}.${key}\")\n            .table(\"${tb}\")\n            <#list fields!! as f>\n            <#if f.field != pri_key>\n            .set(\"${f.field}\", ${f.field})\n            </#if>\n            </#list>\n     .set(\"update_date\", now.getDate())\n      .set(\"update_fulltime\", now.getFulltime())\n      .where(\"target_date = ?\", target_date)\n      .update();\n  } else {\n    water\n            .db(\"${tag}.${key}\")\n            .table(\"${tb}\")\n            .set(\"${pri_key}\", rock.client.newID(\"${tag?upper_case}\", \"${tb}_id\", 315360000))\n            <#list fields!! as f>\n            <#if f.field != pri_key>\n            .set(\"${f.field}\", ${f.field})\n            </#if>\n            </#list>\n      .set(\"target_date\", target_date)\n            .set(\"create_date\", now.getDate())\n            .set(\"create_fulltime\", now.getFulltime())\n      .set(\"update_date\", now.getDate())\n      .set(\"update_fulltime\", now.getFulltime())\n      .insert();\n  }\n}","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1579243687000,"update_fulltime":1617610468000,"use_whitelist":null},{"file_id":30,"file_type":2,"tag":"_code","label":"","path":"/_code/weed_xml_insert","rank":0,"is_staticize":true,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"freemarker","content_type":"","content":"<sql id=\"add_${tb!}\"\n     :return=\"long\"\n     :caching=\"cache_${key!}\"\n     :cacheClear=\"${tb!}_<#noparse>${</#noparse>${pri_key!}<#noparse>}</#noparse>\"\n     :remarks=\"新增${tb!}\">\n    INSERT INTO `${tb!}` (<#list fields!! as f>`${(f.field)!}`<#sep>, </#sep></#list>)\n                  VALUES (<#list fields!! as f>@{${(f.field)!}:${(f.type)!}}<#sep>, </#sep></#list>)\n</sql>","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1579243714000,"update_fulltime":1596781115000,"use_whitelist":null},{"file_id":31,"file_type":2,"tag":"_code","label":"","path":"/_code/java_model_ibinder_2","rank":0,"is_staticize":true,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"freemarker","content_type":"","content":"import org.noear.weed.*;\n\nimport java.util.*;\n\npublic class ${table_camel!}Model implements IBinder {\n    \n    <#list fields!! as f>\n // ${(f.comment)!}\n    public ${(f.type)!} ${(f.field)!};\n    </#list>\n\n  public void bind(GetHandlerEx s) {\n        <#list fields as f>\n        ${(f.field)!} = s.get(\"${(f.field)!}\").value(${(f.def)!});\n        </#list>\n }\n \n  public IBinder clone() {\n    return new ${table_camel!}Model();\n  }\n\n}\n","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1579243737000,"update_fulltime":1579243747000,"use_whitelist":null},{"file_id":34,"file_type":0,"tag":"_demo","label":"","path":"/_demo/ali_oss_cfg_xutil","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"return XUtil.cfg('_demo/aliyun_oss').getProp();","note":"测试","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1579590725000,"update_fulltime":1617772044000,"use_whitelist":null},{"file_id":35,"file_type":0,"tag":"water","label":"","path":"/water/paas/help/api/","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"var System = Java.type('java.lang.System');\n\n\nvar sysinfo = ('Running on Java version: ' + System.getProperty('java.version')) + '；' + ('Unix time from Java: ' + System.currentTimeMillis());\n\n\nreturn modelAndView(\"/water/paas/help/api/view\",{sysinfo:sysinfo});","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1580873159000,"update_fulltime":1614926814000,"use_whitelist":null},{"file_id":36,"file_type":0,"tag":"water","label":"","path":"/water/paas/help/api/view","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"freemarker","content_type":"code/internal","content":"<!doctype html>\n<html class=\"frm10\">\n<head>\n    <title>接口手册</title>\n    <link rel=\"stylesheet\" href=\"//jtx.noear.org/img/_core/durian/main.css?v=14\" />\n    <script src=\"//cdn.bootcss.com/jquery/3.4.1/jquery.min.js\"></script>\n    <style>\n    block{margin:0 10px;}\n    </style>\n</head>\n<body>\n<main>\n\n<div class=\"mar10-t mar10-b\"><h2>概要：</h2></div>\n<br/>\n\n<block>\n${sysinfo!}\n</block>\n<br/>\n<block>\n    <h2>已安装的 脚本或模板执行器</h2>\n    <hr/>\n    <ul>\n        <#list XUtil.executorList() as m1>\n        <li>\n            <div>${m1}</div>\n        </li>\n        </#list>\n    </ul>\n</block>\n<br/>\n\n<block>\n    <h2>脚本和模板执行器 共享嵌入接口或对象</h2>\n    <hr/>\n    <ul>\n        <li>\n            <div class=\"t3\">/** 默认数据访问对象（:org.noear.weed.DbContext） */</div>\n            <div>db</div>\n        </li>\n        <li>\n            <div class=\"t3\">/** 默认缓存服务对象（:org.noear.weed.cache.ICacheServiceEx），可被替换 */</div>\n            <div>cache</div>\n        </li>\n        <li>\n            <div class=\"t3\">/** 当前上下文对象（:org.noear.solon.core.handle.Context） */</div>\n            <div>ctx</div>\n        </li>\n        <li>\n            <div class=\"t3\">/** 本地缓存服务对象（:org.noear.weed.cache.ICacheServiceEx） */</div>\n            <div>localCache</div>\n        </li>\n        <li>\n            <div class=\"t3\">/** 引擎嵌入基础工具 */</div>\n            <div>XUtil</div>\n        </li>\n        <li>\n            <div class=\"t3\">/** 引擎嵌入锁工具 */</div>\n            <div>XLock</div>\n        </li>\n        <li>\n            <div class=\"t3\">/** 引擎嵌入函数总线（用于跨语法共享函数） */</div>\n            <div>XFun</div>\n        </li>\n        <li>\n            <div class=\"t3\">/** 引擎嵌入消息总线（用于水平拆分或扩展业务处理） */</div>\n            <div>XMsg</div>\n        </li>\n    </ul>\n</block>\n<br/>\n\n<block>\n    <h2>脚本执行器 专属嵌入接口或对象</h2>\n    <hr/>\n    <ul>\n        <li>\n            <div class=\"t3\">/** 加载模块或类 */</div>\n            <div>var obj = <b>requireX</b>(path);</div>\n        </li>\n        <li>\n            <div class=\"t3\">/** 返回模块和视图 */</div>\n            <div>return <b>modelAndView</b>(path, model);</div>\n        </li>\n        <li>\n            <div class=\"t3\">/** 其它嵌入类 */</div>\n            <div>XContext、ONode、Datetime、Timecount、Timespan</div>\n        </li>\n    </ul>\n</block>\n\n<br/>\n<div class=\"mar10-t mar10-b\"><h2>具体：<n style='font-size:1rem;font-weight:normal; '>（可借用浏览器查找功能快速定位）</n></h2></div>\n<br/>\n\n<#list XUtil.interfaceList() as l1>\n<block>\n    <div><h2>${l1.name}::${l1.type}</h2></div>\n    <hr/>\n    <ul>\n        <#list l1.methods as s1>\n        <li>\n            <div class=\"t3\">${XUtil.htmlEncode(s1.note)!}</div>\n            <div>${s1.code}</div>\n        </li>\n        </#list>\n    </ul>\n</block>\n</#list>\n\n\n</main>\n</body>\n</html>","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1580873847000,"update_fulltime":1610597542000,"use_whitelist":null},{"file_id":39,"file_type":0,"tag":"sdk_water","label":"","path":"/sdk_water/_test_paas.jsx","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"return water.paas('/sdk_water/_test.jsx',{});","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1583978431000,"update_fulltime":1584411977000,"use_whitelist":null},{"file_id":40,"file_type":0,"tag":"sdk_water","label":"","path":"/sdk_water/_test_xfun.jsx","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"return XFun.callFile('/sdk_water/_test.jsx',{});","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1583978692000,"update_fulltime":1583978715000,"use_whitelist":null},{"file_id":41,"file_type":0,"tag":"sdk_water","label":"","path":"/sdk_water/_test_raas.jsx","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"\nlet args = {'req_device':'f62187db1ac4143a552208bb78bc3f42cd2ebe89','req_ip':'117.136.56.189','open_id':10009493,'mobile':'15858560661'};\n\n\nreturn water.raas('/m/angel/num_risk_model',{args: args});","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1583991233000,"update_fulltime":1583992404000,"use_whitelist":null},{"file_id":42,"file_type":0,"tag":"_demo","label":"","path":"/_demo/ali_oss_cfg_water","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"return water.cfg('_demo/aliyun_oss').getProp();","note":"测试","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1584412079000,"update_fulltime":1617766910000,"use_whitelist":""},{"file_id":69,"file_type":0,"tag":"_funs","label":"","path":"/_funs/_api.clz","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"this.checkParamsIsNot0 = function(c,keys){\n    for(var i in keys){\n      if(c.paramAsInt(keys[i]) == 0){\n       c.attrMap().code = 19;\n        c.attrMap().msg = '参数不能为0('+keys[i]+')';\n          return false;\n      }\n    }\n    \n    return true;    \n}\n\nthis.checkParamsIsOk = function(c,keys){\n    for(var i in keys){\n      if(c.param(keys[i]) == null){\n      c.attrMap().code = 19;\n      c.attrMap().msg = '参数缺少或有错误('+keys[i]+')';\n        return false;\n      }\n    }\n    \n    return true;    \n}\n\nthis.host_isWhitelist = function(c,g){\n    var rUri = c.header('Referer');\n    \n    if(!rUri){\n      c.attrMap().code = 0;\n      c.attrMap().msg  = 'ip is not web';\n      return false;\n    }\n    \n    if(!g){\n      g = 'server';\n    }\n    \n    var rUri2 = java.net.URI.create(rUri);\n    var host2 = rUri2.getHost();\n    \n    if(WaterClient.Whitelist.existsOfDomain(g, host2)){\n       return true;\n    }else{\n       c.attrMap().code = 0;\n       c.attrMap().msg  = 'ip is not whitelist';\n       return false;\n    }\n}\n\nthis.ip_isWhitelist = function(c,g){\n    if(!g){\n      g = 'server';\n    }\n    \n    var ip = XUtil.ip();\n    \n    if(WaterClient.Whitelist.existsOfIp(g,ip)){\n       return true;\n    }else{\n       c.attrMap().code = 0;\n       c.attrMap().msg  = 'ip is not whitelist';\n       return false;\n    }    \n}\n","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1588735808000,"update_fulltime":1592551650000,"use_whitelist":null},{"file_id":70,"file_type":0,"tag":"_funs","label":"","path":"/_funs/_cmd.clz","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"this.checkParamsIsNot0 = function(c,keys) {\n    for(var i in keys){\n      if(c.paramAsInt(keys[i])==0){\n        c.attrMap().code = 19;\n        c.attrMap().msg = '参数不能为0('+keys[i]+')';\n          return false;\n      }\n    }\n    \n    return true;\n}\n\nthis.checkParamsIsOk = function(c,keys){\n    for(var i in keys){\n      if(c.param(keys[i])==null){\n      c.attrMap().code = 19;\n      c.attrMap().msg = '参数缺少或有错误('+keys[i]+')';\n        return false;\n      }\n    }\n    \n    return true;    \n}","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1588736036000,"update_fulltime":1592551404000,"use_whitelist":null},{"file_id":83,"file_type":0,"tag":"sdk_water","label":"","path":"/sdk_water/_test_time.jsx","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"var vm = {};\n\nvm.LocalTime = LocalTime.now().toString();\nvm.LocalDate= LocalDate.now().toString();\nvm.LocalDateTime = LocalDateTime.now().toString();\nvm.test = '1';\n\nreturn vm;","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1590758640000,"update_fulltime":1596595609000,"use_whitelist":null},{"file_id":119,"file_type":0,"tag":"sponge_track","label":"","path":"/sponge_track/get.h5.card.uv","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"application/json","content":"var row_id= ctx.paramAsInt(\"row_id\",0);\n\n/**\n1004412：h5首页卡片\n1004382：原生首页卡片\n*/\n\nvar value =water.db(\"sponge/sponge_track\")\n                .table(\"short_url_ex_track_stat\")\n         .where(\" vi= 3\")\n                .and(\"url_id = ?\", 1004412)\n                .and(\"row_id >=?\",row_id)\n                .limit(100)\n                .select(\"row_id,uv_today,vd,vi\")\n                .getMapList();\nreturn value;","note":"获取h5首页卡片uv","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1592197137000,"update_fulltime":1592197208000,"use_whitelist":null},{"file_id":120,"file_type":0,"tag":"sponge_track","label":"","path":"/sponge_track/log.day","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"application/json","content":"//\n// 参数：tag_id,date\n//\n\nlet _api = requireX('/_funs/_api.clz');\n\nif(!_api.checkParamsIsNot0(ctx,[\"tag_id\",\"date\"])){\n  return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nif(!_api.ip_isWhitelist(ctx)){\n  return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nvar tag_id = ctx.paramAsInt(\"tag_id\");\nvar date   = ctx.paramAsInt(\"date\");\nvar page   = ctx.paramAsInt(\"page\");\nvar size   = ctx.paramAsInt(\"size\");\n\nif(!size){\n  size=50;\n}\n\nvar list = water.db(\"sponge/sponge_track\")\n                .table(\"short_redirect_log_30d\")\n         .where(\"log_date = ?\",date)\n                         .and(\"tag_id = ?\", tag_id)\n                         .groupBy(\"user_key\")\n                         .limit(page*size, size)\n                  .select(\"user_key AS ukey, log_date\")\n                         .getMapList();\n\nif (list && list.length > 0) {\n  return {code:1,msg:'success',list:list};\n} else {\n  return {code:2,msg:'没有相关数据',list:[]};\n}","note":"参数：tag_id,date","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1592197256000,"update_fulltime":1633761762000,"use_whitelist":null},{"file_id":121,"file_type":0,"tag":"sponge_track","label":"","path":"/sponge_track/log.day.no.duplicate","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"application/json","content":"//\n// 参数：log_date,tag_id\n//\n\nlet _api = requireX('/_funs/_api.clz');\n\nif (!_api.checkParamsIsOk(ctx,[\"log_date\", \"tag_id\"])) {\n    return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nif(!_api.checkParamsIsNot0(ctx,[\"size\"])){\n    return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nif(!_api.ip_isWhitelist(ctx)){\n    return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nvar page     = ctx.paramAsInt(\"page\");\nvar size     = ctx.paramAsInt(\"size\");\nvar tag_id   = ctx.paramAsInt('tag_id');\nvar log_date = ctx.paramAsInt('log_date');\n\nvar click_list = water.db(\"sponge/sponge_track\")\n                      .table(\"short_redirect_log_30d s\")\n                      .innerJoin(\"short_url s1\").on(\"s.url_id = s1.url_id\")\n                      .where(\"s.tag_id = ?\", tag_id).and(\"s.log_date = ?\", log_date)\n                      .groupBy(\"s.user_key,s1.url_partner_key\")\n                      .limit(page*size, size)\n                      .select(\"s.url_id,s.tag_id,s.user_id,s.user_key,s1.url_partner_key,s1.url_name,s.v5 udid\")\n                      .getMapList();\n\nif (click_list && click_list.length > 0) {\n    return {code:1, msg:'success', list:click_list};\n} else {\n    return {code:2,msg:'没有相关数据',list:[]};\n}\n","note":"参数：log_date,tag_id","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1592197576000,"update_fulltime":1602664376000,"use_whitelist":null},{"file_id":122,"file_type":0,"tag":"sponge_track","label":"","path":"/sponge_track/log.ukey.time","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"application/json","content":"//\n// 参数：tag_id,page,size,log_date\n//\n\nlet _api = requireX('/_funs/_api.clz');\n\nif(!_api.checkParamsIsNot0(ctx,[\"tag_id\"])){\n  return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nif(!_api.checkParamsIsNot0(ctx,[\"size\"])){\n  return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nif(!_api.ip_isWhitelist(ctx)){\n  return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\n\nvar tag_id   = ctx.paramAsInt(\"tag_id\");\nvar page     = ctx.paramAsInt(\"page\");\nvar size     = ctx.paramAsInt(\"size\");\nvar log_date = ctx.paramAsInt(\"log_date\");\n\n\nvar list = water.db(\"sponge/sponge_track\")\n                .table(\"short_redirect_log_30d\")\n          .where(\"log_date = ?\",log_date).and(\"tag_id = ?\", tag_id)\n                .groupBy(\"user_key\")\n                .orderBy(\"log_id\")\n                .limit(page*size, size)\n              .select(\"user_key AS ukey, MIN(log_date) AS first_date\")\n                .getMapList();\n\nif (list && list.length > 0) {\n  return {code:1,msg:'success',list:list};\n} else {\n  return {code:2,msg:'没有相关数据',list:[]};\n}\n","note":"参数：tag_id,page,size,log_date","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1592197710000,"update_fulltime":1633761770000,"use_whitelist":null},{"file_id":123,"file_type":0,"tag":"sponge_track","label":"","path":"/sponge_track/log.ukey.time.new","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"application/json","content":"//\n// 参数：tag_id,size,page,log_date\n//\n\nlet _api = requireX('/_funs/_api.clz');\n\nif(!_api.checkParamsIsNot0(ctx,[\"tag_id\"])){\n    return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nif(!_api.checkParamsIsNot0(ctx,[\"size\"])){\n    return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nif(!_api.ip_isWhitelist(ctx)){\n    return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\n\nvar tag_id   = ctx.paramAsInt(\"tag_id\");\nvar page     = ctx.paramAsInt(\"page\");\nvar size     = ctx.paramAsInt(\"size\");\nvar log_date = ctx.paramAsInt(\"log_date\");\n\n\nvar list = water.db(\"sponge/sponge_track\")\n                .table(\"short_redirect_log_30d\")\n                .where(\"log_date = ?\",log_date).and(\"tag_id = ?\", tag_id)\n                .groupBy(\"user_key\")\n                .orderBy(\"log_id\")\n                .limit(page*size, size)\n                .select(\"user_key AS ukey, MIN(log_date) AS first_loan_date, \" +\n                    \"MIN(log_fulltime) AS first_loan_time, MAX(log_date) AS last_loan_date, \" +\n                    \"MAX(log_fulltime) AS last_loan_time\")\n                .getMapList();\n\nif (list && list.length > 0) {\n    return {code:1,msg:'success',list:list};\n} else {\n    return {code:2,msg:'没有相关数据',list:[]};\n}","note":"用户首次与最近登录贷超","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1592197909000,"update_fulltime":1633761780000,"use_whitelist":null},{"file_id":124,"file_type":0,"tag":"sponge_track","label":"","path":"/sponge_track/log.urls","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"application/json","content":"//\n// 参数：user_key,tag_id?,date?\n//\n\nlet _api = requireX('/_funs/_api.clz');\n\n\nif(!_api.checkParamsIsOk(ctx,[\"udid\"])){\n  return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nif(!_api.ip_isWhitelist(ctx)){\n  return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nvar udid = ctx.param(\"udid\");\nvar tag_id   = ctx.paramAsInt(\"tag_id\",0);\nvar date     = ctx.paramAsInt(\"date\",0);\n\n\nvar tb = water.db(\"sponge/sponge_track\").table(\"short_redirect_log_30d s\")\n   .innerJoin(\"short_url u\")\n   .innerJoin(\"track_tag t\")\n   .on(\"s.url_id = u.url_id\")\n   .and(\"s.tag_id = t.tag_id\")\n   .where(\"s.v5 = ?\",udid);\n\nif(tag_id>0){\n  tb.and(\"s.tag_id = ?\", tag_id);\n}\n\nif (date > 0) {\n  tb.and(\"s.log_date = ?\",date);\n}\n\nvar list = tb.orderBy(\"s.log_fulltime desc\")\n              .limit(50)\n              .select(\"u.url_name,u.url_partner_key,t.tag_name,s.url_id,s.tag_id,s.log_date,DATE_FORMAT(s.log_fulltime,'%Y-%m-%d %H:%i:%s') log_fulltime\")\n              .getMapList();\n\n\nlet code = 1;\nlet msg = 'success';\n\nreturn {code:code, msg:msg, data:list};\n","note":"ok","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1592200161000,"update_fulltime":1600415132000,"use_whitelist":null},{"file_id":125,"file_type":0,"tag":"sponge_track","label":"","path":"/sponge_track/pui.tag.urls","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"application/json","content":"//\n// 参数：tag_id,date\n//\n\nlet _api = requireX('/_funs/_api.clz');\n\n\nif(!_api.checkParamsIsNot0(ctx,[\"tag_id\",\"date\"])){\n  return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nif(!_api.ip_isWhitelist(ctx)){\n  return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nvar tag_id = ctx.paramAsInt(\"tag_id\");\nvar date   = ctx.paramAsInt(\"date\");\n\nvar list = water.db('sponge/sponge_track')\n                .exe(`SELECT s.url_id,s.url_name,s.url_partner_key,t.pv,t.uv,t.ip FROM stat_date_hour_pv_uv_ip t INNER JOIN short_url s ON t.url_id = s.url_id WHERE t.tag_id = ${tag_id} AND t.log_date = ${date} AND t.log_hour = -1`);\n\n\nreturn {code:1,msg:'success',data:list};","note":"ok","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1592200197000,"update_fulltime":1633761788000,"use_whitelist":null},{"file_id":126,"file_type":0,"tag":"sponge_track","label":"","path":"/sponge_track/pui.track.get","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"application/json","content":"//\n// 参数：vi,vd,date_start,date_end,url_id,log_hour\n//\n\nlet _api = requireX('/_funs/_api.clz');\n\n\n\nif(!_api.checkParamsIsNot0(ctx,[\"date_start\",\"date_end\"])){\n  return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\n\nvar vi          = ctx.paramAsInt(\"vi\");\nvar vd          = ctx.param(\"vd\");\nvar notvd       = ctx.param(\"notvd\");\nvar date_start  = ctx.paramAsInt(\"date_start\");\nvar date_end    = ctx.paramAsInt(\"date_end\");\nvar url_id      = ctx.paramAsInt(\"url_id\");\nvar log_hour    = ctx.paramAsInt(\"log_hour\");\nvar inlist      = ctx.param(\"inlist\");\n\nvar selectDb = water.db(\"sponge/sponge_track\")\n                .table(\"stat_track_date_hour_pv_uv_ip\")\n         .where(\"1 = 1\")\n                .and(\"log_date >= ?\", date_start)\n                .and(\"log_date <= ?\", date_end);\nif(vd){\n   selectDb.and(\"vd = ?\", vd);\n}\nif(vi>0){\n   selectDb.and(\"vi = ?\", vi);\n}\nif(url_id==-1||url_id>0){\n   selectDb.and(\"url_id = ?\", url_id);\n}\nif (log_hour<25) {\n   selectDb.and(\"log_hour = ?\", log_hour);\n}\nif(notvd){\n   var arr = notvd.split(',');\n   for(var i in arr){\n     selectDb.and(\"vd != ?\", arr[i]);\n   }\n}\nif(inlist){\n   var sql = '(';\n   var array = inlist.split(',');\n   for(i in array){\n     sql = sql + ' vd = '+array[i]+' or';\n   }\n   sql = sql.substring(0,sql.length-2) +')';\n   selectDb.and(sql);\n}\n\nvar list = selectDb.orderBy(\"log_date asc\")\n          .select(\"*\")\n                .getMapList();\n                \n\nif (list && list.length > 0) {\n  return {code:1,msg:'success',list:list};\n} else {\n  return {code:2,msg:'没有数据',list:[]};\n}","note":"ok","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1592200209000,"update_fulltime":1633761800000,"use_whitelist":null},{"file_id":127,"file_type":0,"tag":"sponge_track","label":"","path":"/sponge_track/pui.url","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"application/json","content":"//\n// 参数：url_partner_key,tag_id,date?\n//\n\nlet _api = requireX('/_funs/_api.clz');\n\n\nif(!_api.checkParamsIsOk(ctx,[\"url_partner_key\",\"tag_id\"])){\n  return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nif(!_api.checkParamsIsNot0(ctx,[\"tag_id\"])){\n  return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nif(!_api.ip_isWhitelist(ctx)){\n  return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nvar upkey  = ctx.param(\"url_partner_key\");\nvar tag_id = ctx.paramAsInt(\"tag_id\");\nvar date   = ctx.paramAsInt(\"date\");\n\n\nvar db_cfg = \"sponge/sponge_track\";\n\nvar surl = water.db(db_cfg).exe(`map::SELECT * FROM short_url WHERE tag_id = ${tag_id} AND url_partner_key = '${upkey}'`);\n\n\nvar tb = water.db(db_cfg).table('stat_date_hour_pv_uv_ip')\n                   .where('url_id=? AND tag_id=? AND log_hour=-1',surl.url_id,tag_id);\n\nif(date>0){ \n    tb.and('log_date=?',date);\n}\n\nvar list = tb.select('url_id,pv,uv,ip,log_date').getMapList();\n\nlist.forEach(m=>{\n  m.url_name = surl.url_name;\n  m.url_partner_key = surl.url_partner_key;\n});\n\nreturn {code:1,msg:'success',data:list};","note":"ok","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1592200225000,"update_fulltime":1633761809000,"use_whitelist":null},{"file_id":128,"file_type":0,"tag":"sponge_track","label":"","path":"/sponge_track/short.url.partner.key.get","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"application/json","content":"//\n// 参数：\n//\n\nlet _api = requireX('/_funs/_api.clz');\n\n\n\nif(!_api.checkParamsIsOk(ctx,[\"url_key\"])){\n  return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nvar url_key = ctx.param(\"url_key\");\n\n\nvar surl = water.db(\"sponge/sponge_track\").table(\"short_url\")\n                .where(\"url_key = ?\", url_key)\n                .select(\"url_partner_key\")\n                .getValue();\n\nreturn {code:1, msg:'success', data:surl};","note":"ok","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1592200236000,"update_fulltime":1592201227000,"use_whitelist":null},{"file_id":129,"file_type":0,"tag":"sponge_track","label":"","path":"/sponge_track/url.add","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"application/json","content":"//\n// 参数：url_partner_key,url_name,tag_id,tag_access_key\n//\n\nlet _api = requireX('/_funs/_api.clz');\nlet _tool = requireX('/sponge_track/_tool.lib');\n\n\nif (!_api.checkParamsIsOk(ctx,[\"url_partner_key\",\"url_name\",\"tag_id\",\"tag_access_key\"])) {\n  return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nif(!_api.checkParamsIsNot0(ctx,[\"tag_id\"])){\n  return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nif(!_api.ip_isWhitelist(ctx)){\n  return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nvar tag_access_key  = ctx.param(\"tag_access_key\");\nvar tag_id          = ctx.paramAsInt(\"tag_id\",0);\nvar build_link      = ctx.param(\"build_link\");\n\nif (build_link) {\n  if (_tool.checkBuildLink(build_link) === false) {\n    return {code:6,msg:\"构建链接格式不正确\"};\n  }\n}\n\nvar tag = water.db(\"sponge/sponge_track\").table(\"track_tag\")\n      .where(\"tag_id = ?\",tag_id).and(\"tag_access_key = ?\",tag_access_key)\n      .select(\"*\")\n      .getMap();\n\n\nif (tag.tag_id === 0) {\n  return {code:5,msg:\"tag_access_key错误\"};\n}else {\n  var oNode = _tool.addShortUrlApi(ctx); \n\n  if (oNode.url) {\n    return {code:1,msg:\"success\",data:oNode};\n  }else{\n    return {code:4,msg:\"源网址已是短地址格式\"};\n  }\n}\n\n","note":"ok","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1592200247000,"update_fulltime":1599647738000,"use_whitelist":null},{"file_id":130,"file_type":0,"tag":"sponge_track","label":"","path":"/sponge_track/url.get.by.tag.pk","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"application/json","content":"//\n// 参数：tag_id,url_partner_key\n//\n\nlet _api = requireX('/_funs/_api.clz');\n\n\nif (!_api.checkParamsIsOk(ctx,[\"url_partner_key\",\"tag_id\"])) {\n  return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nif(!_api.checkParamsIsNot0(ctx,[\"tag_id\"])){\n  return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nvar tag_id          = ctx.paramAsInt(\"tag_id\");\nvar url_partner_key = ctx.paramAsInt(\"url_partner_key\");\n\nvar obj = water.db(\"sponge/sponge_track\").table(\"short_url\")\n            .where(\"tag_id = ?\",tag_id).and(\"url_partner_key = ?\",url_partner_key)\n            .select(\"*\")\n            .getMap();\n\nreturn {code:1,msg:\"success\",data:obj};","note":"ok","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1592200258000,"update_fulltime":1592202447000,"use_whitelist":null},{"file_id":131,"file_type":0,"tag":"sponge_track","label":"","path":"/sponge_track/url.pui.get","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"application/json","content":"//\n// 参数：tag_id,url_ids,date\n//\n\nlet _api = requireX('/_funs/_api.clz');\n\nif(!_api.checkParamsIsNot0(ctx,[\"tag_id\",\"date_start\",\"date_end\"])){\n  return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nlet tag_id      = ctx.paramAsInt(\"tag_id\");\nlet date_start  = ctx.param(\"date_start\");\nlet date_end    = ctx.param(\"date_end\");\nlet url_ids     = ctx.param(\"url_ids\",\"\");\n\nlet selectDb = water.db(\"sponge/sponge_track\")\n                .table(\"stat_date_hour_pv_uv_ip\")\n          .where(\"log_hour = -1\")\n                .and(\"tag_id = ?\", tag_id)\n                .and(\"log_date >= ?\", date_start)\n                .and(\"log_date <= ?\", date_end);\n\nif(url_ids){\n   let sql = '(';\n   let array = url_ids.split(',');\n   \n   for(let i in array){\n     sql = sql + ' url_id = '+array[i]+' or';\n   }\n   \n   sql = sql.substring(0,sql.length-2) +')';\n   selectDb.and(sql);\n}\n\nlet list = selectDb.select(\"*\")\n                .getMapList();              \n                \nif (list && list.length > 0) {\n  return {code:1,msg:'success',list:list};\n} else {\n  return {code:2,msg:'没有数据',list:[]};\n}","note":"ok","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1592200269000,"update_fulltime":1633762112000,"use_whitelist":null},{"file_id":132,"file_type":0,"tag":"sponge_track","label":"","path":"/sponge_track/url.update.by.tag.pk","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"application/json","content":"//\n// 参数：tag_id,url_partner_key,url_val\n//\n\nlet _api = requireX('/_funs/_api.clz');\n\n\nif (!_api.checkParamsIsOk(ctx,[\"url_partner_key\",\"url_val\",\"tag_id\"])) {\n return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nif(!_api.checkParamsIsNot0(ctx,[\"tag_id\"])){\n  return {code:ctx.attrMap().code, msg:ctx.attrMap().msg};\n}\n\nvar tag_id          = ctx.param(\"tag_id\");\nvar url_partner_key = ctx.paramAsInt(\"url_partner_key\");\nvar url_val         = ctx.param(\"url_val\");\n\nvar url_val_md5 = XUtil.md5(url_val);\n\nwater.db(\"sponge/sponge_track\").table(\"short_url\")\n            .where(\"tag_id = ?\",tag_id)\n            .and(\"url_partner_key = ?\",url_partner_key)\n     .set(\"url_val_md5\", url_val_md5)\n      .set(\"url_val\", url_val)\n            .set(\"update_time\", \"$NOW()\")\n            .update();\n\nreturn {code:1,msg:\"success\"};","note":"ok","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1592200279000,"update_fulltime":1633762121000,"use_whitelist":null},{"file_id":133,"file_type":0,"tag":"sponge_track","label":"","path":"/sponge_track/_tool.lib","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"code/internal","content":"this.addShortUrlApi = function(ctx){\n    var prefix = water.cfg('sponge/track_uri').value;\n    \n    var tag_id          = ctx.paramAsInt(\"tag_id\",0);\n    var tag_access_key  = ctx.param(\"tag_access_key\");\n    var url_partner_key = ctx.param(\"url_partner_key\");\n    var url_name        = ctx.param(\"url_name\");\n    var url_val         = ctx.param(\"url_val\");\n    var track_params    = ctx.param(\"track_params\");\n    var trans_params    = ctx.param(\"trans_params\");\n    var user_field      = ctx.param(\"user_field\");\n    var build_link      = ctx.param(\"build_link\");\n    var note            = ctx.param(\"note\");\n    \n    if (url_val && url_val.indexOf(prefix) >= 0) { \n      return {};\n    } \n    \n    var dbx = water.db(\"sponge/sponge_track\");\n    \n    \n    var shortUrl = dbx.table(\"short_url\")\n                .where(\"tag_id = ?\",tag_id).and(\"url_partner_key = ?\",url_partner_key)\n                .select(\"*\")\n                .getMap();\n    \n    var url_id = shortUrl.url_id;\n    var trackParamsNum = 0;\n    var tag = dbx.table(\"track_tag\")\n          .where(\"tag_id = ?\",tag_id)\n         .select(\"*\")\n          .getMap();\n    \n    var tag_host = tag.tag_host;\n    if(tag_host){\n       if(tag_host.substr(-1)!='/'){\n       tag_host = tag_host + '/';\n       }\n       prefix = tag_host;\n    }\n    var dbQueryUpdate = dbx.table(\"short_url\")\n          .set(\"tag_id\", tag_id)\n          .set(\"url_partner_key\", url_partner_key)\n          .set(\"url_name\",url_name)\n                .set(\"update_time\", \"$NOW()\");\n\n    if(track_params) {\n        trackParamsNum = track_params.split(',').length;\n        dbQueryUpdate.set(\"track_params\", track_params)\n          .set(\"track_params_num\", trackParamsNum);\n    } else{\n      track_params = tag.t_track_params;\n\n       if(track_params){\n        trackParamsNum = track_params.split(',').length;\n       }\n    }\n    \n    if(!trans_params) { \n        trans_params = tag.t_trans_params;\n    } else {\n        dbQueryUpdate.set(\"trans_params\", trans_params);\n    }\n    \n    if(!user_field) { \n        user_field = tag.t_user_field;\n    } else {\n       dbQueryUpdate.set(\"user_field\",user_field);\n    }\n    \n    if(!build_link) { \n        build_link = tag.t_build_link;\n    } else {\n        dbQueryUpdate.set(\"build_link\",build_link);\n    }\n    \n    var url_md5 = '';\n    if(url_val) { \n        url_md5 = XUtil.md5(url_val);\n        dbQueryUpdate.set(\"url_val\", url_val)\n                     .set(\"url_val_md5\", url_md5);\n    }\n    XUtil.log(track_params+\"a1,\"+trackParamsNum+\"a2,\"+trans_params+\"a3\");\n    var dbQuery = dbx.table(\"short_url\")\n          .set(\"tag_id\", tag_id)\n          .set(\"url_partner_key\", url_partner_key)\n          .set(\"url_name\",url_name)\n         .set(\"url_val_md5\", url_md5)\n          .set(\"url_val\", url_val)\n          .set(\"track_params\", track_params)\n          .set(\"track_params_num\", trackParamsNum)\n          .set(\"trans_params\", trans_params)\n          .set(\"user_field\",user_field)\n         .set(\"build_link\",build_link)\n                .set(\"update_time\", \"$NOW()\");\n    \n    if(!url_id){ \n       /*公共函数调用  tag名_函数名*/\n       url_id = this.getUrlID();\n       var url_key = this.getCodeByID(url_id);\n       \n      dbQuery.set(\"url_id\", url_id)\n           .set(\"create_fulltime\", \"$NOW()\")\n           .set(\"url_key\", url_key)\n             .set(\"note\",note)\n            .insert();\n      \n      dbx.table(\"short_url_ex_stat\")\n          .set(\"url_id\", url_id)\n          .set(\"tag_id\", tag_id)\n          .insert();\n          \n       return {'url':prefix+url_key,'url_id':url_id};\n    }else{\n     dbQueryUpdate.where(\"url_id = ?\", url_id).update();\n     return {'url':prefix+shortUrl.url_key,'url_id':url_id};\n    }\n}\n\n\nthis.checkBuildLink = function(build_link){\n    if(!build_link || build_link.indexOf('::')<0){\n      return false;\n    }\n    \n    return true;\n}\n\nthis.getCodeByID = function(id){\n    var key = 999999999;\n    id = id + key;\n    id = id - (key / 100);\n    id = id + (key / 10000);\n    id = id - (key / 1000000);\n    id = parseInt(id + 2);\n    \n    return id.toString(36);\n}\n\nthis.getShortUrlByPartnerKey = function(url_partner_key,tag_id){\n    return water.db('sponge/sponge_track')\n                .exe(`map::SELECT * FROM short_url WHERE url_partner_key=${url_partner_key} AND tag_id=${tag_id}`);\n}\n\nthis.getTag = function(tag_id){\n    return water.db('sponge/sponge_track')\n                .exe(`map::SELECT * FROM track_tag WHERE tag_id=${tag_id}`);\n}\n\nthis.getUrlID = function(){\n    return rock.client.newID('SPONGE_ID','url_id',60 * 60 * 24 * 365) + 1000000;\n}\n\n","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1592201357000,"update_fulltime":1617610381000,"use_whitelist":null},{"file_id":164,"file_type":1,"tag":"sponge_track","label":"","path":"/sponge_track/del_stat_360d","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let db2 = water.db('sponge/sponge_track');\n\nvar date = Datetime.Now().addDay(-360).getDate();  //SELECT DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -360 DAY),'%Y%m%d')\nvar date2 = Datetime.Now().addDay(-90).getDate(); //SELECT DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -90 DAY),'%Y%m%d')\n\ndb2.exe(`DELETE FROM stat_city_date_pv_uv_ip WHERE log_date <?`, date);\ndb2.exe(`DELETE FROM stat_ua_client_date_pv_uv_ip WHERE log_date <?`, date);\ndb2.exe(`DELETE FROM stat_ua_platform_date_pv_uv_ip WHERE log_date <?`, date);\n\n\ndb2.exe(`DELETE FROM stat_date_hour_pv_uv_ip WHERE log_date <?  AND log_hour>=0`, date2);\n\ndb2.exe(`DELETE FROM stat_track_date_hour_pv_uv_ip WHERE log_date <?`, date2);\n\nreturn \"OK\";\n","note":"删除超360天的统计数据","plan_state":8,"plan_begin_time":1592064000000,"plan_last_time":1617601110000,"plan_last_timespan":107,"plan_next_time":0,"plan_interval":"1d","plan_max":0,"plan_count":268,"create_fulltime":1592192368000,"update_fulltime":1597809271000,"use_whitelist":null},{"file_id":165,"file_type":1,"tag":"sponge_track","label":"","path":"/sponge_track/del_track_log_30d","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let db2 = water.db('sponge/sponge_track');\n\nvar date = Datetime.Now().addDay(-30).getDate(); //SELECT DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -30 DAY),'%Y%m%d')\n\ndb2.exe(`DELETE FROM short_redirect_log_30d WHERE log_date <= ?`, date);\n\nreturn 'OK';","note":"删除超30天的日志数据","plan_state":8,"plan_begin_time":1592064000000,"plan_last_time":1617601110000,"plan_last_timespan":22,"plan_next_time":0,"plan_interval":"1d","plan_max":0,"plan_count":266,"create_fulltime":1592192565000,"update_fulltime":1597809296000,"use_whitelist":null},{"file_id":166,"file_type":1,"tag":"sponge_track","label":"","path":"/sponge_track/ip_city_code0","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let db2 = water.db('sponge/sponge_track');\n\n//\n// old::APPCODE 42a57d3dd8c543a291ff9d5a06a4fb77\n//\n// new::APPCODE ae5df0d8a5ed4b81bf8b3fe50e292055\n//\nfunction doItem(item){\n var txt  = XUtil.http(\"http://iploc.market.alicloudapi.com/v3/ip?ip=\"+item.ip_val).header(\"Authorization\",\"APPCODE ae5df0d8a5ed4b81bf8b3fe50e292055\").get();\n  var ipx = JSON.parse(txt);\n  \n  if(typeof(ipx.adcode) == 'string'){\n   db2.exe(`UPDATE code_ip SET city_name=?,city_code=?,is_checked=1 WHERE ip_id =?`, ipx.city, ipx.adcode, item.ip_id);\n  }else{\n    db2.exe(`UPDATE code_ip SET is_checked = 1 WHERE ip_id = ?`, item.ip_id);\n }\n}\n\n\nlet list = db2.exe(`list::SELECT * FROM code_ip WHERE city_code=0 AND is_checked=0 AND MOD(ip_id,5)=0 LIMIT 1000`);\n\nif(list && list.length){\n for(var i in list){\n   var item = list[i];\n   doItem(item);\n }\n}\n\nreturn 'OK';","note":"根据IP获取城市码-任务0","plan_state":8,"plan_begin_time":1592193207000,"plan_last_time":1617601708000,"plan_last_timespan":3268,"plan_next_time":0,"plan_interval":"10m","plan_max":0,"plan_count":33453,"create_fulltime":1592192812000,"update_fulltime":1597809372000,"use_whitelist":null},{"file_id":167,"file_type":1,"tag":"sponge_track","label":"","path":"/sponge_track/ip_city_code1","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let db2 = water.db('sponge/sponge_track');\n\nfunction doItem(item){\n var txt  = XUtil.http(\"http://iploc.market.alicloudapi.com/v3/ip?ip=\"+item.ip_val).header(\"Authorization\",\"APPCODE 42a57d3dd8c543a291ff9d5a06a4fb77\").get();\n  var ipx = JSON.parse(txt);\n  \n  if(typeof(ipx.adcode) == 'string'){\n   db2.exe(`UPDATE code_ip SET city_name=?,city_code=?,is_checked=1 WHERE ip_id =?`, ipx.city, ipx.adcode, item.ip_id);\n  }else{\n    db2.exe(`UPDATE code_ip SET is_checked = 1 WHERE ip_id = ?`, item.ip_id);\n }\n}\n\n\nlet list = db2.exe(`list::SELECT * FROM code_ip WHERE city_code=0 AND is_checked=0 AND MOD(ip_id,5)=1 LIMIT 1000`);\n\nif(list && list.length){\n for(var i in list){\n   var item = list[i];\n   doItem(item);\n }\n}\n\nreturn 'OK';","note":"根据IP获取城市码-任务1","plan_state":8,"plan_begin_time":1592193217000,"plan_last_time":1617601717000,"plan_last_timespan":10,"plan_next_time":0,"plan_interval":"10m","plan_max":0,"plan_count":33419,"create_fulltime":1592192836000,"update_fulltime":1597809420000,"use_whitelist":null},{"file_id":168,"file_type":1,"tag":"sponge_track","label":"","path":"/sponge_track/ip_city_code2","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let db2 = water.db('sponge/sponge_track');\n\nfunction doItem(item){\n var txt  = XUtil.http(\"http://iploc.market.alicloudapi.com/v3/ip?ip=\"+item.ip_val).header(\"Authorization\",\"APPCODE 42a57d3dd8c543a291ff9d5a06a4fb77\").get();\n  var ipx = JSON.parse(txt);\n  \n  if(typeof(ipx.adcode) == 'string'){\n   db2.exe(`UPDATE code_ip SET city_name=?,city_code=?,is_checked=1 WHERE ip_id =?`, ipx.city, ipx.adcode, item.ip_id);\n  }else{\n    db2.exe(`UPDATE code_ip SET is_checked = 1 WHERE ip_id = ?`, item.ip_id);\n }\n}\n\n\nlet list = db2.exe(`list::SELECT * FROM code_ip WHERE city_code=0 AND is_checked=0 AND MOD(ip_id,2)=0 LIMIT 1000`);\n\nif(list && list.length){\n for(var i in list){\n   var item = list[i];\n   doItem(item);\n }\n}\n\nreturn 'OK';","note":"根据IP获取城市码-任务2","plan_state":8,"plan_begin_time":1592193224000,"plan_last_time":1617601724000,"plan_last_timespan":2863,"plan_next_time":0,"plan_interval":"10m","plan_max":0,"plan_count":33340,"create_fulltime":1592192846000,"update_fulltime":1597809427000,"use_whitelist":null},{"file_id":169,"file_type":1,"tag":"sponge_track","label":"","path":"/sponge_track/ip_city_code3","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let db2 = water.db('sponge/sponge_track');\n\nfunction doItem(item){\n var txt  = XUtil.http(\"http://iploc.market.alicloudapi.com/v3/ip?ip=\"+item.ip_val).header(\"Authorization\",\"APPCODE 42a57d3dd8c543a291ff9d5a06a4fb77\").get();\n  var ipx = JSON.parse(txt);\n  \n  if(typeof(ipx.adcode) == 'string'){\n   db2.exe(`UPDATE code_ip SET city_name=?,city_code=?,is_checked=1 WHERE ip_id =?`, ipx.city, ipx.adcode, item.ip_id);\n  }else{\n    db2.exe(`UPDATE code_ip SET is_checked = 1 WHERE ip_id = ?`, item.ip_id);\n }\n}\n\n\nlet list = db2.exe(`list::SELECT * FROM code_ip WHERE city_code=0 AND is_checked=0 AND MOD(ip_id,5)=3 LIMIT 1000`);\n\nif(list && list.length){\n for(var i in list){\n   var item = list[i];\n   doItem(item);\n }\n}\n\nreturn 'OK';","note":"根据IP获取城市码-任务3","plan_state":8,"plan_begin_time":1592193231000,"plan_last_time":1617601733000,"plan_last_timespan":9,"plan_next_time":0,"plan_interval":"10m","plan_max":0,"plan_count":33261,"create_fulltime":1592192854000,"update_fulltime":1597809432000,"use_whitelist":null},{"file_id":170,"file_type":1,"tag":"sponge_track","label":"","path":"/sponge_track/ip_city_code4","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let db2 = water.db('sponge/sponge_track');\n\nfunction doItem(item){\n var txt  = XUtil.http(\"http://iploc.market.alicloudapi.com/v3/ip?ip=\"+item.ip_val).header(\"Authorization\",\"APPCODE 42a57d3dd8c543a291ff9d5a06a4fb77\").get();\n  var ipx = JSON.parse(txt);\n  \n  if(typeof(ipx.adcode) == 'string'){\n   db2.exe(`UPDATE code_ip SET city_name=?,city_code=?,is_checked=1 WHERE ip_id =?`, ipx.city, ipx.adcode, item.ip_id);\n  }else{\n    db2.exe(`UPDATE code_ip SET is_checked = 1 WHERE ip_id = ?`, item.ip_id);\n }\n}\n\n\nlet list = db2.exe(`list::SELECT * FROM code_ip WHERE city_code=0 AND is_checked=0 AND MOD(ip_id,5)=4 LIMIT 1000`);\n\nif(list && list.length){\n for(var i in list){\n   var item = list[i];\n   doItem(item);\n }\n}\n\nreturn 'OK';","note":"根据IP获取城市码-任务4","plan_state":8,"plan_begin_time":1592193237000,"plan_last_time":1617601739000,"plan_last_timespan":13,"plan_next_time":0,"plan_interval":"10m","plan_max":0,"plan_count":32074,"create_fulltime":1592192867000,"update_fulltime":1597809442000,"use_whitelist":null},{"file_id":171,"file_type":1,"tag":"sponge_track","label":"","path":"/sponge_track/notice_stat","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"var date1  = Datetime.Now().addDay(-1).getDate(); //SELECT DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 DAY),'%Y%m%d')\n\n// XUtil.http(\"http://water.zmapi.cn/msg/send/\")\n//      .data(\"key\",XUtil.guid())\n//      .data(\"topic\",\"sponge.stat.notice\")\n//      .data(\"message\",date1)\n//      .post();\n\n\nwater.sendMessage(\"sponge.stat.notice\", date1+'');\n\nreturn 'OK';","note":"定时发现统计通知（由别人去统计）","plan_state":9,"plan_begin_time":1592196183000,"plan_last_time":1611328564000,"plan_last_timespan":8,"plan_next_time":0,"plan_interval":"10m","plan_max":0,"plan_count":26349,"create_fulltime":1592193278000,"update_fulltime":1592193644000,"use_whitelist":null},{"file_id":172,"file_type":1,"tag":"sponge_track","label":"","path":"/sponge_track/stat_city","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let db2 = water.db('sponge/sponge_track');\n\nlet date1  = new Datetime().getDate();\n\n\ndb2.exe(`UPDATE short_redirect_log_30d l, code_ip u\nSET l.log_city_code = (u.city_code/10000)*10000\nWHERE l.log_city_code=0 AND l.log_ip_id = u.ip_id AND u.city_code>0`);\n\n\ndb2.exe(`DELETE FROM stat_city_date_pv_uv_ip WHERE log_date = ?`, date1);\n\n\ndb2.exe(`INSERT INTO stat_city_date_pv_uv_ip(url_id,tag_id,province_code,log_date,pv,uv,ip)\nSELECT -1,tag_id,log_city_code,log_date,COUNT(*) pv,COUNT(DISTINCT user_key) uv,COUNT(DISTINCT log_ip_id) ip\nFROM short_redirect_log_30d \nWHERE log_date = ?\nGROUP BY tag_id,log_city_code`, date1);\n\n\ndb2.exe(`INSERT INTO stat_city_date_pv_uv_ip(url_id,tag_id,province_code,log_date,pv,uv,ip)\nSELECT url_id,tag_id,log_city_code,log_date,COUNT(*) pv,COUNT(DISTINCT user_key) uv,COUNT(DISTINCT log_ip_id) ip\nFROM short_redirect_log_30d \nWHERE log_date = ?\nGROUP BY url_id,log_city_code`, date1);\n\n\n/* update uv2 */\ndb2.exe(`UPDATE stat_city_date_pv_uv_ip t,(\n   SELECT tag_id,province_code,log_date,SUM(uv) uv2 \n   FROM stat_city_date_pv_uv_ip \n   WHERE log_date= ? AND url_id<>-1\n    GROUP BY tag_id,province_code,log_date\n) t2\nSET t.uv2 = t2.uv2\nWHERE t.tag_id = t2.tag_id AND t.province_code = t2.province_code AND t.log_date = t2.log_date AND t.url_id=-1`, date1);\n\nreturn 'OK';\n","note":"统计城市数据","plan_state":8,"plan_begin_time":1592196189000,"plan_last_time":1617601990000,"plan_last_timespan":5907,"plan_next_time":0,"plan_interval":"5m","plan_max":0,"plan_count":66714,"create_fulltime":1592194243000,"update_fulltime":1597809531000,"use_whitelist":null},{"file_id":173,"file_type":1,"tag":"sponge_track","label":"","path":"/sponge_track/stat_ua_client","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let db2 = water.db('sponge/sponge_track');\n\n\nvar date1  = new Datetime().getDate();\n\n\ndb2.exe(`DELETE FROM stat_ua_client_date_pv_uv_ip WHERE log_date = ?`, date1);\n\n\ndb2.exe(`INSERT INTO stat_ua_client_date_pv_uv_ip(url_id,tag_id,ua_client,log_date,pv,uv,ip)\nSELECT -1,s.tag_id,u.client,log_date,COUNT(*) pv,COUNT(DISTINCT s.user_key) uv,COUNT(DISTINCT s.log_ip_id) ip\nFROM short_redirect_log_30d s INNER JOIN code_ua u ON s.log_ua_id=u.ua_id\nWHERE s.log_date = ?\nGROUP BY s.tag_id,u.client`, date1);\n\n\ndb2.exe(`INSERT INTO stat_ua_client_date_pv_uv_ip(url_id,tag_id,ua_client,log_date,pv,uv,ip)\nSELECT s.url_id,s.tag_id,u.client,log_date,COUNT(*) pv,COUNT(DISTINCT s.user_key) uv,COUNT(DISTINCT s.log_ip_id) ip\nFROM short_redirect_log_30d s INNER JOIN code_ua u ON s.log_ua_id=u.ua_id\nWHERE s.log_date = ?\nGROUP BY s.url_id,u.client`, date1);\n\n/* update uv2 */\ndb2.exe(`UPDATE stat_ua_client_date_pv_uv_ip t,(\n    SELECT tag_id,ua_client,log_date,SUM(uv) uv2 \n   FROM stat_ua_client_date_pv_uv_ip \n    WHERE log_date= ? AND url_id<>-1\n    GROUP BY tag_id,ua_client,log_date\n) t2\nSET t.uv2 = t2.uv2\nWHERE t.tag_id = t2.tag_id AND t.ua_client = t2.ua_client AND t.log_date = t2.log_date AND t.url_id=-1`, date1);\n\nreturn 'OK';\n","note":"统计客户端UA数据","plan_state":8,"plan_begin_time":1592196194000,"plan_last_time":1617601993000,"plan_last_timespan":8925,"plan_next_time":0,"plan_interval":"5m","plan_max":0,"plan_count":66706,"create_fulltime":1592194257000,"update_fulltime":1597809596000,"use_whitelist":null},{"file_id":174,"file_type":1,"tag":"sponge_track","label":"","path":"/sponge_track/stat_ua_platform","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let db2 = water.db('sponge/sponge_track');\n\nvar date1  = new Datetime().getDate();\n\n\ndb2.exe(`DELETE FROM stat_ua_platform_date_pv_uv_ip WHERE log_date = ?`, date1);\n\n\ndb2.exe(`INSERT INTO stat_ua_platform_date_pv_uv_ip(url_id,tag_id,ua_platform,log_date,pv,uv,ip)\nSELECT -1,s.tag_id,u.platform,log_date,COUNT(*) pv,COUNT(DISTINCT s.user_key) uv,COUNT(DISTINCT s.log_ip_id) ip\nFROM short_redirect_log_30d s INNER JOIN code_ua u ON s.log_ua_id=u.ua_id\nWHERE s.log_date = ?\nGROUP BY s.tag_id,u.platform`, date1);\n\n\ndb2.exe(`INSERT INTO stat_ua_platform_date_pv_uv_ip(url_id,tag_id,ua_platform,log_date,pv,uv,ip)\nSELECT s.url_id,s.tag_id,u.platform,log_date,COUNT(*) pv,COUNT(DISTINCT s.user_key) uv,COUNT(DISTINCT s.log_ip_id) ip\nFROM short_redirect_log_30d s INNER JOIN code_ua u ON s.log_ua_id=u.ua_id\nWHERE s.log_date = ?\nGROUP BY s.url_id,u.platform`, date1);\n\n\n/* update uv2 */\ndb2.exe(`UPDATE stat_ua_platform_date_pv_uv_ip t,(\n    SELECT tag_id,ua_platform,log_date,SUM(uv) uv2 \n   FROM stat_ua_platform_date_pv_uv_ip \n    WHERE log_date= ? AND url_id<>-1\n    GROUP BY tag_id,ua_platform,log_date\n) t2\nSET t.uv2 = t2.uv2\nWHERE t.tag_id = t2.tag_id AND t.ua_platform = t2.ua_platform AND t.log_date = t2.log_date AND t.url_id=-1`, date1);\n\nreturn 'OK';\n","note":"统计平台UA数据","plan_state":8,"plan_begin_time":1592196199000,"plan_last_time":1617602000000,"plan_last_timespan":2822,"plan_next_time":0,"plan_interval":"5m","plan_max":0,"plan_count":66712,"create_fulltime":1592194268000,"update_fulltime":1597810151000,"use_whitelist":null},{"file_id":175,"file_type":1,"tag":"sponge_track","label":"","path":"/sponge_track/stat_url","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let db2 = water.db('sponge/sponge_track');\n\n\nlet date1  = Datetime.Now().addDay(-1).getDate(); //$<SELECT DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 DAY),'%Y%m%d')\nlet date30 = Datetime.Now().addDay(-30).getDate(); //$<SELECT DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -30 DAY),'%Y%m%d')\nlet date0  = Datetime.Now().getDate(); //$<SELECT DATE_FORMAT(NOW(),'%Y%m%d')\nlet dateX  = 0;\nlet hour0  = Datetime.Now().getHours();\n\n\nif(hour0>=4){\n  dateX = date0;\n}else{\n  dateX = date1;\n}\n\ndb2.exe(`DELETE FROM stat_date_hour_pv_uv_ip WHERE log_date>=?`, dateX);\n\nfunction stat_url() {\n\n  /*统计典线图：日数据*/\n db2.exe(`INSERT INTO stat_date_hour_pv_uv_ip(url_id,tag_id,log_date,log_hour,pv,uv,ip)\n    SELECT url_id,tag_id,log_date,-1, COUNT(*) pv,COUNT(DISTINCT user_key) uv,COUNT(DISTINCT log_ip_id) ip\n    FROM short_redirect_log_30d \n    WHERE log_date>=?\n   GROUP BY url_id,log_date`, dateX);\n\n    db2.exe(`INSERT INTO stat_date_hour_pv_uv_ip(url_id,tag_id,log_date,log_hour,pv,uv,ip)\n    SELECT -1,tag_id,log_date,-1, COUNT(*) pv,COUNT(DISTINCT user_key) uv,COUNT(DISTINCT log_ip_id) ip\n    FROM short_redirect_log_30d \n    WHERE log_date>=?\n   GROUP BY tag_id,log_date`, dateX);\n    \n  /*update date uv2*/\n db2.exe(`UPDATE stat_date_hour_pv_uv_ip t,(\n   SELECT tag_id,log_date,SUM(uv) uv2 \n   FROM stat_date_hour_pv_uv_ip \n   WHERE log_date>= ? AND log_hour=-1 AND url_id<>-1\n   GROUP BY tag_id,log_date\n        ) t2\n      SET t.uv2 = t2.uv2\n      WHERE t.tag_id = t2.tag_id AND t.log_date = t2.log_date AND t.log_hour=-1 AND t.url_id=-1`, dateX);\n   \n\n  /*统计典线图：小时数据*/\n    db2.exe(`INSERT INTO stat_date_hour_pv_uv_ip(url_id,tag_id,log_date,log_hour,pv,uv,ip)\n    SELECT url_id,tag_id,log_date, log_hour,COUNT(*) pv,COUNT(DISTINCT user_key) uv,COUNT(DISTINCT log_ip_id) ip\n    FROM short_redirect_log_30d \n    WHERE log_date>=?\n   GROUP BY url_id,log_date,log_hour`, dateX);\n\n    db2.exe(`INSERT INTO stat_date_hour_pv_uv_ip(url_id,tag_id,log_date,log_hour,pv,uv,ip)\n   SELECT -1,tag_id,log_date, log_hour,COUNT(*) pv,COUNT(DISTINCT user_key) uv,COUNT(DISTINCT log_ip_id) ip\n    FROM short_redirect_log_30d \n    WHERE log_date>=?\n   GROUP BY tag_id,log_date,log_hour`, dateX);\n   \n  /*update hour uv2*/\n db2.exe(`UPDATE stat_date_hour_pv_uv_ip t,(\n   SELECT tag_id,log_date,log_hour,SUM(uv) uv2 \n    FROM stat_date_hour_pv_uv_ip \n   WHERE log_date>= ? AND log_hour<>-1 AND url_id<>-1\n    GROUP BY tag_id,log_date,log_hour\n        ) t2\n      SET t.uv2 = t2.uv2\n      WHERE t.tag_id = t2.tag_id AND t.log_date = t2.log_date AND t.log_hour=t2.log_hour AND t.url_id=-1`, dateX);\n}\n\nfunction stat_url_sum(){\n  /*总量统计：url记录昨日数据*/\n  db2.exe(`UPDATE short_url_ex_stat SET uv_yesterday=0,pv_yesterday=0,ip_yesterday=0 WHERE 1=1`);\n \n  db2.exe(`UPDATE short_url_ex_stat se, stat_date_hour_pv_uv_ip ss\n  SET se.uv_yesterday = ss.uv, se.pv_yesterday = ss.pv, se.ip_yesterday = ss.ip\n WHERE se.url_id = ss.url_id AND ss.log_date=? AND ss.log_hour=-1 AND ss.url_id>0`, date1);\n  \n  /*总量统计：url记录今日数据*/\n  db2.exe(`UPDATE short_url_ex_stat SET uv_today=0,pv_today=0,ip_today=0 WHERE 1=1`);\n \n  db2.exe(`UPDATE short_url_ex_stat se, stat_date_hour_pv_uv_ip ss\n  SET se.uv_today = ss.uv, se.pv_today = ss.pv, se.ip_today = ss.ip\n WHERE se.url_id = ss.url_id AND ss.log_date=? AND ss.log_hour=-1 AND ss.url_id>0`, date0);\n\n  /*总量统计：url合计总数*/\n  db2.exe(`TRUNCATE TABLE _tmp_total_pv_uv_ip`);\n  \n  db2.exe(`INSERT INTO _tmp_total_pv_uv_ip(obj_id,pv,uv,ip)\n SELECT url_id,SUM(pv) pv, SUM(uv) uv,SUM(ip) ip\n FROM stat_date_hour_pv_uv_ip WHERE log_date>=? AND log_hour=-1 AND url_id>0 GROUP BY url_id`, date30);\n\n    db2.exe(`UPDATE short_url_ex_stat SET uv_total=0,pv_total=0,ip_total=0 WHERE 1=1`);\n \n  db2.exe(`UPDATE short_url_ex_stat u, _tmp_total_pv_uv_ip s\n  SET u.pv_total = s.pv, u.uv_total = s.uv, u.ip_total = s.ip\n WHERE u.url_id = s.obj_id`);\n\n\n\n  /*总量统计：tag记录昨日数据*/\n  db2.exe(`UPDATE track_tag_ex_stat se, stat_date_hour_pv_uv_ip ss\n  SET se.uv_yesterday = ss.uv, se.pv_yesterday = ss.pv, se.ip_yesterday = ss.ip\n WHERE se.tag_id = ss.tag_id AND ss.log_date=? AND ss.log_hour=-1 AND ss.url_id=-1`, date1);\n \n  /*总量统计：tag记录今日数据*/\n  db2.exe(`UPDATE track_tag_ex_stat SET uv_today=0,pv_today=0,ip_today=0 WHERE 1=1`);\n \n  db2.exe(`UPDATE track_tag_ex_stat se, stat_date_hour_pv_uv_ip ss\n  SET se.uv_today = ss.uv, se.pv_today = ss.pv, se.ip_today = ss.ip\n WHERE se.tag_id = ss.tag_id AND ss.log_date=? AND ss.log_hour=-1 AND ss.url_id=-1`, date0);\n \n  /*总量统计：tag合计总数*/\n  db2.exe(`TRUNCATE TABLE _tmp_total_pv_uv_ip`);\n  \n  db2.exe(`INSERT INTO _tmp_total_pv_uv_ip(obj_id,pv,uv,ip)\n SELECT tag_id,SUM(pv) pv, SUM(uv) uv,SUM(ip) ip\n FROM stat_date_hour_pv_uv_ip WHERE log_date>=? AND log_hour=-1 AND url_id=-1 GROUP BY tag_id`,date30);\n  \n  db2.exe(`UPDATE track_tag_ex_stat u, _tmp_total_pv_uv_ip s\n  SET u.pv_total = s.pv, u.uv_total = s.uv, u.ip_total = s.ip\n WHERE u.tag_id = s.obj_id`);\n}\n\nstat_url();\nstat_url_sum();\n\nreturn 'OK';\n","note":"统计URL数据","plan_state":8,"plan_begin_time":1592196205000,"plan_last_time":1617602184000,"plan_last_timespan":191,"plan_next_time":0,"plan_interval":"2m","plan_max":0,"plan_count":166772,"create_fulltime":1592194284000,"update_fulltime":1597809790000,"use_whitelist":null},{"file_id":176,"file_type":1,"tag":"sponge_track","label":"","path":"/sponge_track/stat_url_track","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let db2 = water.db('sponge/sponge_track');\n\nlet date1  = Datetime.Now().addDay(-1).getDate(); //$<SELECT DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 DAY),'%Y%m%d')\nlet date30 = Datetime.Now().addDay(-30).getDate(); //$<SELECT DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -30 DAY),'%Y%m%d')\nlet date0  = Datetime.Now().getDate(); //$<SELECT DATE_FORMAT(NOW(),'%Y%m%d')\nlet dateX  = 0;\nlet hour0  = Datetime.Now().getHours();\n\n\nif(hour0>=4){\n  dateX = date0;\n}else{\n  dateX = date1;\n}\n\n\ndb2.exe(`DELETE FROM stat_track_date_hour_pv_uv_ip WHERE log_date>=?`, dateX);\n\nfunction stat_track(i) {\n /*url*/\n let url_ids = db2.exe(`list::SELECT url_id FROM short_url WHERE track_params_num>=?`, i).stream().map(m1 => m1.url_id).toArray();\n \n  if(url_ids){\n    for(let j in url_ids){\n        db2.exe(`INSERT INTO stat_track_date_hour_pv_uv_ip(url_id,tag_id,log_date,log_hour,vi,vd,uv,pv,ip)\n      SELECT url_id,tag_id,log_date,-1,${i},v${i},COUNT(DISTINCT user_key) uv,COUNT(*) pv,COUNT(DISTINCT log_ip_id) ip\n      FROM short_redirect_log_30d \n      WHERE log_date>=? AND url_id =?\n     GROUP BY url_id,log_date,v${i}`, dateX, url_ids[j]);\n      \n      \n      db2.exe(`INSERT INTO stat_track_date_hour_pv_uv_ip(url_id,tag_id,log_date,log_hour,vi,vd,uv,pv,ip)\n      SELECT url_id,tag_id,log_date,log_hour,${i},v${i},COUNT(DISTINCT user_key) uv,COUNT(*) pv,COUNT(DISTINCT log_ip_id) ip\n      FROM short_redirect_log_30d \n      WHERE log_date>=? AND url_id =?\n     GROUP BY url_id,log_date,log_hour,v${i}`, dateX, url_ids[j]);\n   }\n }\n\n /*tag*/\n let tag_ids = db2.exe(`list::SELECT tag_id FROM track_tag WHERE t_track_params_num>=${i}`).stream().map(m1 => m1.tag_id).toArray();\n if(tag_ids){\n    for(let j in tag_ids){\n        db2.exe(`INSERT INTO stat_track_date_hour_pv_uv_ip(url_id,tag_id,log_date,log_hour,vi,vd,uv,pv,ip)\n      SELECT -1,tag_id,log_date,-1,${i},v${i},COUNT(DISTINCT user_key) uv,COUNT(*) pv,COUNT(DISTINCT log_ip_id) ip\n      FROM short_redirect_log_30d \n      WHERE log_date>=? AND tag_id = ?\n      GROUP BY tag_id,log_date,v${i}`, dateX, tag_ids[j]);\n    }\n }\n}\n\nfunction stat_track_sum(){\n\n  /*url total*/\n db2.exe(`TRUNCATE short_url_ex_track_stat`);\n  \n  db2.exe(`INSERT INTO short_url_ex_track_stat(url_id,tag_id,vi,vd,uv_total,pv_total,ip_total)\n  SELECT url_id,tag_id,vi,vd,SUM(uv) uv,SUM(pv) pv,SUM(ip) ip \n  FROM stat_track_date_hour_pv_uv_ip \n WHERE log_date>=? AND log_hour=-1 AND url_id>0\n  GROUP BY url_id,vi,vd`, date30);\n  \n  \n  /*url yesday*/\n  db2.exe(`TRUNCATE _tmp_track_total_pv_uv_ip`);\n  \n  db2.exe(`INSERT INTO _tmp_track_total_pv_uv_ip(obj_id,vi,vd,uv,pv,ip)\n SELECT url_id,vi,vd,uv,pv,ip FROM stat_track_date_hour_pv_uv_ip \n  WHERE log_date=? AND log_hour=-1 AND url_id>0`, date1);\n \n  db2.exe(`UPDATE short_url_ex_track_stat s, _tmp_track_total_pv_uv_ip t\n  SET s.uv_yesterday = t.uv, s.pv_yesterday = t.pv, s.ip_yesterday = t.ip\n WHERE s.url_id = t.obj_id AND s.vi = t.vi AND s.vd = t.vd`);\n  \n  /*url today*/\n db2.exe(`TRUNCATE _tmp_track_total_pv_uv_ip`);\n  \n  db2.exe(`INSERT INTO _tmp_track_total_pv_uv_ip(obj_id,vi,vd,uv,pv,ip)\n SELECT url_id,vi,vd,uv,pv,ip FROM stat_track_date_hour_pv_uv_ip \n  WHERE log_date=? AND log_hour=-1 AND url_id>0`, date0);\n \n  db2.exe(`UPDATE short_url_ex_track_stat s, _tmp_track_total_pv_uv_ip t\n  SET s.uv_today = t.uv, s.pv_today = t.pv, s.ip_today = t.ip\n WHERE s.url_id = t.obj_id AND s.vi = t.vi AND s.vd = t.vd`);\n  \n  \n  /*tag total*/\n db2.exe(`TRUNCATE track_tag_ex_track_stat`);\n  \n  db2.exe(`INSERT INTO track_tag_ex_track_stat(tag_id,vi,vd,uv_total,pv_total,ip_total)\n SELECT tag_id,vi,vd,SUM(uv) uv,SUM(pv) pv,SUM(ip) ip \n FROM stat_track_date_hour_pv_uv_ip \n WHERE log_date>=? AND log_hour=-1 AND url_id=-1\n GROUP BY tag_id,vi,vd`, date30);\n  \n  \n  /*tag yesday*/\n  db2.exe(`TRUNCATE _tmp_track_total_pv_uv_ip`);\n  \n  db2.exe(`INSERT INTO _tmp_track_total_pv_uv_ip(obj_id,vi,vd,uv,pv,ip)\n SELECT tag_id,vi,vd,uv,pv,ip FROM stat_track_date_hour_pv_uv_ip \n  WHERE log_date=? AND log_hour=-1 AND url_id=-1`, date1);\n  \n  db2.exe(`UPDATE track_tag_ex_track_stat s, _tmp_track_total_pv_uv_ip t\n  SET s.uv_yesterday = t.uv, s.pv_yesterday = t.pv, s.ip_yesterday = t.ip\n WHERE s.tag_id = t.obj_id AND s.vi = t.vi AND s.vd = t.vd`);\n  \n  /*tag today*/\n db2.exe(`TRUNCATE _tmp_track_total_pv_uv_ip`);\n  \n  db2.exe(`INSERT INTO _tmp_track_total_pv_uv_ip(obj_id,vi,vd,uv,pv,ip)\n SELECT tag_id,vi,vd,uv,pv,ip FROM stat_track_date_hour_pv_uv_ip \n  WHERE log_date=? AND log_hour=-1 AND url_id=-1`, date0);\n  \n  db2.exe(`UPDATE track_tag_ex_track_stat s, _tmp_track_total_pv_uv_ip t\n  SET s.uv_today = t.uv, s.pv_today = t.pv, s.ip_today = t.ip\n WHERE s.tag_id = t.obj_id AND s.vi = t.vi AND s.vd = t.vd`);\n}\n\nstat_track(1);\nstat_track(2);\nstat_track(3);\nstat_track(4);\nstat_track(5);\n\nstat_track_sum();\n\nreturn 'OK';\n\n","note":"统计URL跟踪数据","plan_state":8,"plan_begin_time":1592196211000,"plan_last_time":1617601110000,"plan_last_timespan":529,"plan_next_time":0,"plan_interval":"30m","plan_max":0,"plan_count":11126,"create_fulltime":1592194301000,"update_fulltime":1597810382000,"use_whitelist":null},{"file_id":177,"file_type":1,"tag":"sponge_track","label":"","path":"/sponge_track/udp_user_agen_p_c","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let db2 = water.db('sponge/sponge_track');\n\nvar begin_id = 0;\n\nvar list1 = db2.exe(`list::SELECT * FROM code_enum WHERE type=1 AND keyword<>'' ORDER BY row_id ASC`);\nvar list2 = db2.exe(`list::SELECT * FROM code_enum WHERE type=2 AND keyword<>'' ORDER BY row_id ASC`);\n\n/*生成平台码*/\nfor(var idx in list1){\n  var m = list1[idx];\n  \n}\n\nfor(var idx in list1){\n  var m = list1[idx];\n  var kl = m.keyword.split('#');\n  for(var jdx in kl){\n var k2 = kl[jdx];\n db2.exe(`UPDATE code_ua SET platform=? WHERE ua_id>? AND platform=0 AND ua_val LIKE ?`, m.value, begin_id, k2);\n  }\n}\n\n\n\n/*生成客户端码（部份）*/\nfor(var idx in list2){\n  var m = list2[idx];\n  var kl = m.keyword.split('#');\n  for(var jdx in kl){\n var k2 = kl[jdx];\n    db2.exe(`UPDATE code_ua SET client=? WHERE ua_id>? AND client=0 AND ua_val LIKE ?`, m.value, begin_id, k2);\n  }\n}\n\n\nreturn 'OK';\n","note":"生成UDP数据","plan_state":8,"plan_begin_time":1592196217000,"plan_last_time":1617601717000,"plan_last_timespan":16,"plan_next_time":0,"plan_interval":"10m","plan_max":0,"plan_count":33420,"create_fulltime":1592194319000,"update_fulltime":1620468244000,"use_whitelist":null},{"file_id":178,"file_type":0,"tag":"sdk_water","label":"","path":"/sdk_water/_test_ip.jsx","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"return ctx.ip();","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1592550726000,"update_fulltime":1592550735000,"use_whitelist":null},{"file_id":187,"file_type":2,"tag":"water","label":"","path":"/water/jenkins_config","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"freemarker","content_type":"","content":"<?xml version='1.0' encoding='UTF-8'?>\n<project>\n    <actions/>\n    <description></description>\n    <keepDependencies>false</keepDependencies>\n    <properties>\n        <hudson.model.ParametersDefinitionProperty>\n            <parameterDefinitions>\n                <hudson.model.StringParameterDefinition>\n                    <name>qq</name>\n                    <description>qqq</description>\n                    <defaultValue>qqq</defaultValue>\n                </hudson.model.StringParameterDefinition>\n            </parameterDefinitions>\n        </hudson.model.ParametersDefinitionProperty>\n    </properties>\n    <scm class=\"hudson.plugins.git.GitSCM\" plugin=\"git@3.3.0\">\n        <configVersion>2</configVersion>\n        <userRemoteConfigs>\n            <hudson.plugins.git.UserRemoteConfig>\n                <url>https://github.com/bingyue/easy-springmvc-maven.git</url>\n            </hudson.plugins.git.UserRemoteConfig>\n        </userRemoteConfigs>\n        <branches>\n            <hudson.plugins.git.BranchSpec>\n                <name>*/master</name>\n            </hudson.plugins.git.BranchSpec>\n        </branches>\n        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>\n        <submoduleCfg class=\"list\"/>\n        <extensions/>\n    </scm>\n    <canRoam>true</canRoam>\n    <disabled>false</disabled>\n    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>\n    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>\n    <triggers/>\n    <concurrentBuild>false</concurrentBuild>\n    <builders>\n        <hudson.tasks.Shell>\n            <command>\n                echo &quot;hello world!&quot;;\n                M3_HOME=/Users/admin/Documents/tool/maven\n                PATH=$PATH:$M3_HOME/bin\n                JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home\n                export M3_HOME;\n                export PATH;\n                export JAVA_HOME;\n                echo ${qq};\n                mvn clean install -U;\n            </command>\n        </hudson.tasks.Shell>\n    </builders>\n    <publishers/>\n    <buildWrappers/>\n</project>","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1593757271000,"update_fulltime":1593757546000,"use_whitelist":null},{"file_id":188,"file_type":2,"tag":"_code","label":"","path":"/_code/java_crud_xml_template","rank":0,"is_staticize":true,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"freemarker","content_type":"","content":"INSERT INTO `group_buying` (\n<#list fields!! as f>\n`${(f.field)!}`,\n</#list>\n) VALUES(\n<#list fields!! as f>\n@{${(f.field)!}:${(f.type)!}} ,\n</#list>\n)","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1594176195000,"update_fulltime":1594176834000,"use_whitelist":null},{"file_id":202,"file_type":0,"tag":"_demo","label":"","path":"/_demo/message_sub","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let act = ctx.param('act');\n\nlet service = '';           //服务名\nlet service_secretKey='';   //服务签名密钥\n\nlet receiver_url =  water.cfg('water/paas_uri').value + ctx.path(); //接收地址，根据情况调整\nlet alarm_mobile='';\nlet receive_way = 0;\nlet topics = [''];\n\nif(act === 'sub'){\n    //订阅消息 //String subscriber_key, String receiver_url, String access_key, String alarm_mobile, int receive_way, boolean is_unstable, String... topics\n    WaterClient.Message.subscribeTopic('',service,receiver_url,service_secretKey,alarm_mobile,false,0,topics);\n    return 'OK';\n}\n\nif(act === 'unsub'){\n    //取消订阅 //String subscriber_key, String... topics\n    WaterClient.Message.unSubscribeTopic('',service,topics);\n    return 'OK';\n}\n\n\n//接收并处理消息 //msg:{id,times,key,topic,message,sgin}\nlet result = WaterClient.Message.receiveMessage(k => ctx.param(k), service_secretKey, msg => {\n    //msg.message;\n    return false; \n});\n\n\nreturn result;\n\n//return receiver_url;","note":"示例","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1596524018000,"update_fulltime":1636000161000,"use_whitelist":null},{"file_id":267,"file_type":2,"tag":"_ops","label":"","path":"/_ops/peapi.sh","rank":0,"is_staticize":true,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"sh","content_type":"text/plain","content":"#!/usr/bin/bash\n\nname=\"pepperapi\"\ndpdir=/data/sss/pepper.zmapi.cn\n\nbackup(){\nbackuptime=$(date '+%Y%m%d_%H:%M:%S')\nbackupdir=\"/data/backup/$name/$backuptime\"\nmkdir -p \"${backupdir}\"\nscp $host:${dpdir}/pepperapi.jar ${backupdir}\n}\n\ndeploy(){\nrsync -avz --delete pepperapi.jar ${host}:${dpdir}\nssh -t root@${host} <<EOF\nsed -i '/127.0.0.1:8081/s/^.*$/    server 127.0.0.1:8081 down;/g'  /data/_nginx.conf/pepper.zmapi.cn \nnginx -s reload\nsleep 7\nsystemctl restart pepperapi1\nwhile :\n    do\n        curl -m 3 -sI  \"http://127.0.0.1:8081/run/check/\" | grep 200\n        if [[ $? -eq 0 ]]\n            then\n            echo \"service1 is ok\"\n            break\n        fi\n        sleep 3\n    done\nsleep 3\nsed -i '/127.0.0.1:8081/s/^.*$/    server 127.0.0.1:8081 weight=10;/g'  /data/_nginx.conf/pepper.zmapi.cn\nsed -i '/127.0.0.1:8082/s/^.*$/    server 127.0.0.1:8082 down;/g'  /data/_nginx.conf/pepper.zmapi.cn\nnginx -s reload\nsleep 7\nsystemctl restart pepperapi2\nwhile :\n    do\n        curl -m 3 -sI  \"http://127.0.0.1:8082/run/check/\" | grep 200\n        if [[ $? -eq 0 ]]\n            then\n            echo \"service2 is ok\"\n            break\n        fi\n        sleep 3\n    done\nsleep 3\nsed -i '/127.0.0.1:8082/s/^.*$/    server 127.0.0.1:8082 weight=10;/g'  /data/_nginx.conf/pepper.zmapi.cn\nnginx -s reload\nEOF\n}\n\nhost=api\nbackup\n\nfor host in  {api,api2}\ndo\ndeploy\ndone\nif [[ $? -eq 0 ]]\n    then\n    curl \"http://water2/run/push/?target=@alarm&msg=pepperapi发布成功\"\n    else\n    curl \"http://water2/run/push/?target=@alarm&msg=pepperapi发布失败\"\n    break\nfi\n\nrm -rf ${name}.jar\n","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1598945235000,"update_fulltime":1598945396000,"use_whitelist":null},{"file_id":268,"file_type":2,"tag":"_ops","label":"","path":"/_ops/rockrpc.sh","rank":0,"is_staticize":true,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"sh","content_type":"text/plain","content":"#!/usr/bin/bash\n\nname=\"rockrpc\"\ndpdir=/data/sss/water.zmapi.cn\n\nbackup(){\nbackuptime=$(date '+%Y%m%d_%H:%M:%S')\nbackupdir=\"/data/backup/$name/$backuptime\"\nmkdir -p \"${backupdir}\"\nscp $host1:${dpdir}/rockrpc.jar ${backupdir}\n}\n\ndeploy(){\nrsync -avz --delete rockrpc.jar ${host}:${dpdir}\nssh -t root@${host} <<EOF\nip=$(ip addr |grep inet |grep -v inet6 |grep eth0 | awk '{print $2}' | awk -F \"/\" '{print $1}')\ncurl http://water2/sev/set/?s=rockrpc@${ip}:8085,0\nsleep 2\nsystemctl restart rockrpc1\nsleep 2\ncurl http://water2/sev/set/?s=rockrpc@${ip}:8085,1\ncurl http://water2/sev/set/?s=rockrpc@${ip}:8086,0\nsleep 2\nsystemctl restart rockrpc2\nsleep 2\ncurl http://water2/sev/set/?s=rockrpc@${ip}:8086,1\nEOF\n}\n\nhost=water\nbackup\n\nfor host in  {waterapi,waterapi2}\ndo\ndeploy\ndone\nif [[ $? -eq 0 ]]\n    then\n    curl \"http://water2/run/push/?target=@alarm&msg=rockrpc发布成功\"\n    else\n    curl \"http://water2/run/push/?target=@alarm&msg=rockrpc发布失败\"\n    break\nfi\n\nrm -rf ${name}.jar\n","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1598945295000,"update_fulltime":1621242198000,"use_whitelist":null},{"file_id":281,"file_type":0,"tag":"sponge_track","label":"","path":"/sponge_track/get.original.url","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let tag_id= ctx.paramAsInt(\"tag_id\",0);\nlet url_partner_key=ctx.param(\"url_partner_key\");\n\n\nvar value =water.db(\"sponge/sponge_track\")\n                .table(\"short_url\")\n         .where(\" tag_id= ?\",tag_id)\n                .and(\"url_partner_key = ?\", url_partner_key)\n                .limit(1)\n                .select(\"url_val\")\n                .getValue();\nreturn {code:1,msg:\"success\",url:value};","note":"获取短地址的原始连接","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1602298721000,"update_fulltime":1602300532000,"use_whitelist":null},{"file_id":349,"file_type":1,"tag":"_ops","label":"","path":"/_ops/test","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let num = Math.ceil(Math.random()*10);\n\nfor(let i=0; i<num; i++){\n    water.sendMessage(\"water.config.update\",\"_demo::test\");\n}\n\nreturn num;\n","note":"","plan_state":8,"plan_begin_time":1622044800000,"plan_last_time":1636218000265,"plan_last_timespan":577,"plan_next_time":1635786000000,"plan_interval":"0 0 1 * * ?","plan_max":0,"plan_count":7044,"create_fulltime":1622087364000,"update_fulltime":1622087545000,"use_whitelist":null},{"file_id":352,"file_type":1,"tag":"water","label":"","path":"/water/log_del_15d_bef","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let list = water.db(\"water/water\")\n                .sql(\"SELECT logger_id,tag,logger,keep_days,DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -keep_days DAY),'%Y%m%d') date FROM water_cfg_logger\")\n                .getMapList();\n\nlet hub = Java.type('org.noear.water.protocol.ProtocolHub');\nlet map = {};\n\nfor(let i in list){\n    let m = list[i];\n    \n    try{\n        let timecount = new Timecount().start();\n        let num = hub.logQuerier.clear(m.logger, m.keep_days, 100000);\n        map[m.logger] = num;\n        \n        XUtil.log(`${m.logger} deleted : ${num} - ${timecount.stop().milliseconds()}ms`);\n    }catch(err){\n      XUtil.log(err);\n    }\n}\n\nreturn map;\n","note":"日志-删除过期的数据","plan_state":9,"plan_begin_time":1579236868000,"plan_last_time":1636256264275,"plan_last_timespan":5440,"plan_next_time":1636260868275,"plan_interval":"1h","plan_max":0,"plan_count":2545,"create_fulltime":1579236881000,"update_fulltime":1620441596000,"use_whitelist":null},{"file_id":353,"file_type":1,"tag":"water","label":"","path":"/water/msg_del_3d","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"var date3 = Datetime.Now().addDay(-3).getDate();\n\nvar hub = Java.type('org.noear.water.protocol.ProtocolHub');\n\n//删除\n//\nfor(let ms of hub.getMsgBrokerList()){\n    ms.getSource().clear(date3);\n}\n\nreturn \"ok\";","note":"消息清理和统计","plan_state":9,"plan_begin_time":1579237979000,"plan_last_time":1636256264276,"plan_last_timespan":978,"plan_next_time":1636258379276,"plan_interval":"1h","plan_max":0,"plan_count":2566,"create_fulltime":1579237980000,"update_fulltime":1635999009000,"use_whitelist":null},{"file_id":354,"file_type":1,"tag":"water","label":"","path":"/water/msg_reset","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"\nlet hub = Java.type('org.noear.water.protocol.ProtocolHub');\nlet map = {};\n\nfor(let ms of hub.getMsgBrokerList()){\n    let rst = ms.getSource().reset(30);\n    \n    map[ms.getName()] = rst;\n\n    XUtil.log(ms.getName() + \"::reset-\" + rst);\n}\n\nreturn map;","note":"消息异常重置","plan_state":9,"plan_begin_time":1579239545000,"plan_last_time":1636257185728,"plan_last_timespan":11,"plan_next_time":1636257245728,"plan_interval":"1m","plan_max":0,"plan_count":1089,"create_fulltime":1579238632000,"update_fulltime":1635999934000,"use_whitelist":null},{"file_id":355,"file_type":1,"tag":"water","label":"","path":"/water/speed_del_30","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let d1 = new Datetime().addDay(-3).getDate();\nlet d2 = new Datetime().addDay(-3).getDate();\nlet d3 = new Datetime().addDay(-30).getDate();\n\nlet db1= water.db('water/water');\ndb1.exe(`DELETE FROM water_reg_service_speed WHERE DATE(last_updatetime)<?`, d1);\ndb1.exe(`DELETE FROM water_reg_service_speed_date WHERE log_date <?`, d2);\ndb1.exe(`DELETE FROM water_reg_service_speed_hour WHERE log_date <?`, d3);\n\nlet rd2 = water.rd('water/water_redis',5);\nrd2.open0(function(ru){\n  return ru.key('monitor_keys').delete();\n});\n\nreturn 'OK';\n","note":"接口性能-删除超时的记录","plan_state":9,"plan_begin_time":1588695000000,"plan_last_time":1636256264276,"plan_last_timespan":2385,"plan_next_time":1636258200276,"plan_interval":"1h","plan_max":0,"plan_count":2569,"create_fulltime":1588728944000,"update_fulltime":1619705660000,"use_whitelist":null},{"file_id":356,"file_type":1,"tag":"water","label":"","path":"/water/speed_sync_ref","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"var date = new Datetime().getDate();\n\nvar db2 = water.db(`water/water`);\n\ndb2.exe(`UPDATE water_reg_service_speed s,water_reg_service_speed_date d\n            SET s.average_ref = d.average\n            WHERE d.log_date=? AND s.service = d.service AND s.tag = d.tag AND s.name_md5 = d.name_md5`, date);\n\n\nreturn 'OK';","note":"接口性能-数据引用同步","plan_state":9,"plan_begin_time":1588694400000,"plan_last_time":1636257121199,"plan_last_timespan":118,"plan_next_time":1636257420199,"plan_interval":"5m","plan_max":0,"plan_count":212,"create_fulltime":1588729157000,"update_fulltime":1616744285000,"use_whitelist":null},{"file_id":357,"file_type":1,"tag":"water","label":"","path":"/water/server_bls_track_pull","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"water.call(\"wateradmin\",\"/mot/bls/track/ajax/pull\");\n\nreturn 'OK';","note":"拉取bls的指标数据","plan_state":9,"plan_begin_time":1588694400000,"plan_last_time":1636256820377,"plan_last_timespan":77,"plan_next_time":1636257420377,"plan_interval":"10m","plan_max":0,"plan_count":4980,"create_fulltime":1588731567000,"update_fulltime":1623126796000,"use_whitelist":null},{"file_id":358,"file_type":1,"tag":"water","label":"","path":"/water/server_dbs_track_pull","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"water.call(\"wateradmin\",\"/mot/dbs/track/ajax/pull\");\nwater.call(\"wateradmin\",\"/mot/dbs/mencache/track/ajax/pull\");\nwater.call(\"wateradmin\",\"/mot/dbs/redis/track/ajax/pull\");\n\nreturn 'OK';","note":"拉取dbs的指标数据","plan_state":9,"plan_begin_time":1588694400000,"plan_last_time":1636256820377,"plan_last_timespan":111,"plan_next_time":1636257420377,"plan_interval":"10m","plan_max":0,"plan_count":4980,"create_fulltime":1588731618000,"update_fulltime":1623126826000,"use_whitelist":null},{"file_id":359,"file_type":1,"tag":"water","label":"","path":"/water/server_ecs_sev_num_stat","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":" let db1 = water.db('water/water');\n \n var list = db1.sql(\"SELECT server_id,address_local ip FROM water_ops_server WHERE iaas_type=0 AND address_local!=''\").getMapList();\n \n for(let i in list){\n   let m = list[i];\n   let num = db1.sql(`SELECT COUNT(*) num FROM water_reg_service WHERE address LIKE ?`, `${m.ip}:%`).getValue(); \n   db1.exe(`UPDATE water_ops_server SET sev_num =? WHERE server_id=?`, num, m.server_id);       \n }\n \n \n return 'OK';","note":"统计服务器的服务数量","plan_state":9,"plan_begin_time":1588694400000,"plan_last_time":1636256264283,"plan_last_timespan":2500,"plan_next_time":1636257600283,"plan_interval":"1h","plan_max":0,"plan_count":2584,"create_fulltime":1588731679000,"update_fulltime":1619106355000,"use_whitelist":null},{"file_id":360,"file_type":1,"tag":"water","label":"","path":"/water/server_ecs_track_pull","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"water.call('wateradmin','/mot/ecs/track/ajax/pull');\n\nreturn 'OK';","note":"拉取ecs的指标数据","plan_state":9,"plan_begin_time":1588694400000,"plan_last_time":1636256264284,"plan_last_timespan":1381,"plan_next_time":1636257600284,"plan_interval":"1h","plan_max":0,"plan_count":2561,"create_fulltime":1588731688000,"update_fulltime":1623126816000,"use_whitelist":null},{"file_id":361,"file_type":1,"tag":"water","label":"","path":"/water/_service_disable_auto","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let db2 = water.db('water/water');\n\n//\n//分开执行，可以用到索引，进而不用锁全表\n//\ndb2.exe(`\nUPDATE water_reg_service SET is_enabled=0 \nWHERE (address LIKE ?) AND check_last_state=1`, '192.%');\n\n\ndb2.exe(`\nUPDATE water_reg_service SET is_enabled=0 \nWHERE (address LIKE ?) AND check_last_state=1`, '169.%');\n\n\ndb2.exe(`\nUPDATE water_reg_service SET is_enabled=0 \nWHERE (address LIKE ?) AND check_last_state=1`, '10.37.%');\n\n\nreturn 'OK';","note":"服务-内网自动禁用","plan_state":9,"plan_begin_time":1589644800000,"plan_last_time":1636257180689,"plan_last_timespan":71,"plan_next_time":1636257300689,"plan_interval":"2m","plan_max":0,"plan_count":5454,"create_fulltime":1589672134000,"update_fulltime":1597808967000,"use_whitelist":null},{"file_id":362,"file_type":1,"tag":"water","label":"","path":"/water/_msg_subscriber_disable_auto","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let db2 = water.db('water/water');\n\n//禁用操作\n\n//内网IP\n//\ndb2.exe(`UPDATE water_msg_subscriber SET is_enabled=0 \nWHERE is_enabled=1 AND check_last_state=1 AND receive_url LIKE ?`,'%//192.%');\n\ndb2.exe(`UPDATE water_msg_subscriber SET is_enabled=0 \nWHERE is_enabled=1 AND check_last_state=1 AND receive_url LIKE ?`,'%//169.%');\n\ndb2.exe(`UPDATE water_msg_subscriber SET is_enabled=0 \nWHERE is_enabled=1 AND check_last_state=1 AND receive_url LIKE ?`,'%//10.37.%');\n\n//本机IP\n//\ndb2.exe(`UPDATE water_msg_subscriber SET is_enabled=0 \nWHERE is_enabled=1 AND check_last_state=1 AND receive_url LIKE ?`,'%//0:0:%');\n\ndb2.exe(`UPDATE water_msg_subscriber SET is_enabled=0 \nWHERE is_enabled=1 AND check_last_state=1 AND receive_url LIKE ?`,'%//127.0%');\n\n\n//删除操作（放在禁用之后）\n\n//IP注册的，坏了的（一般是water内部消息）\n//\ndb2.exe(`DELETE FROM water_msg_subscriber \nWHERE is_enabled=1 AND check_last_state=1 AND check_error_num > 4 AND LENGTH(subscriber_note) > 0`);\n\nreturn \"OK\";","note":"消息-删除无意义的内网订阅者","plan_state":9,"plan_begin_time":1589644800000,"plan_last_time":1636257180689,"plan_last_timespan":135,"plan_next_time":1636257300689,"plan_interval":"2m","plan_max":0,"plan_count":5454,"create_fulltime":1589672315000,"update_fulltime":1635916058000,"use_whitelist":null},{"file_id":363,"file_type":1,"tag":"water_raas","label":"","path":"/water_raas/raas_sync_log2all","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":true,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let db2 = water.db('water/water_paas');\n\nvar date = Datetime.Now().addDay(-2).getDate(); // SELECT DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -2 DAY),'%Y%m%d')\n\ndb2.exe(`INSERT INTO rubber_log_request_all\nSELECT * FROM rubber_log_request WHERE log_date=?`, date);\n\n\nreturn 'OK';","note":"将处理日志同步到总表（处理表只保持30天）","plan_state":8,"plan_begin_time":1592150400000,"plan_last_time":1635823650000,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"1d","plan_max":0,"plan_count":142,"create_fulltime":1592196853000,"update_fulltime":1635823673000,"use_whitelist":null},{"file_id":364,"file_type":1,"tag":"water","label":"","path":"/water/_service_consumer_del_7d","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let date = Datetime.Now().addDay(-3).getFulltime();\n\nlet db2 = water.db('water/water');\n\ndb2.table('water_reg_consumer')\n   .where('chk_fulltime < ?',date)\n   .delete();\n     \n     \nreturn 'OK';","note":"网关-删除7天没活跃的消息者记录","plan_state":9,"plan_begin_time":1592150400000,"plan_last_time":1636256264285,"plan_last_timespan":1758,"plan_next_time":1636257600285,"plan_interval":"1h","plan_max":0,"plan_count":2587,"create_fulltime":1592208606000,"update_fulltime":1623920143000,"use_whitelist":null},{"file_id":365,"file_type":1,"tag":"water","label":"","path":"/water/msg_persistence","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let date90 = Datetime.Now().addDay(-90).getDate();\nlet date2 = Datetime.Now().addDay(-2).getDate();\n\nlet hub = Java.type('org.noear.water.protocol.ProtocolHub');\n\nfor(let ms of hub.getMsgBrokerList()){\n    ms.getSource().persistence(date2,date90);\n}\n\n\nreturn \"ok\";","note":"消息持久化处理","plan_state":9,"plan_begin_time":1593370800000,"plan_last_time":1636256264286,"plan_last_timespan":1096,"plan_next_time":1636311600286,"plan_interval":"1d","plan_max":0,"plan_count":165,"create_fulltime":1593486768000,"update_fulltime":1635998821000,"use_whitelist":null},{"file_id":366,"file_type":1,"tag":"water","label":"","path":"/water/_service_consumer_sync","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let db2 = water.db('water/water');\n\ndb2.exe(`UPDATE water_reg_consumer c, water_reg_service s \n            SET c.chk_fulltime = s.check_last_time,\n                c.chk_last_state = s.check_last_state,\n                c.is_enabled = s.is_enabled\n          WHERE c.consumer_address = s.address`);\n          \n          \nreturn 'OK';","note":"网关-同步消费者记录","plan_state":9,"plan_begin_time":1593705600000,"plan_last_time":1636257180689,"plan_last_timespan":34,"plan_next_time":1636257240689,"plan_interval":"1m","plan_max":0,"plan_count":863,"create_fulltime":1593742616000,"update_fulltime":1594001380000,"use_whitelist":null},{"file_id":367,"file_type":1,"tag":"water","label":"","path":"/water/log_alarm","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let list = water.db(\"water/water\")\n                .sql(\"SELECT logger_id,tag,logger,source FROM water_cfg_logger WHERE is_alarm=1\")\n                .getMapList();\n                \n\nlet alarm_sign = XUtil.cfgGet('water/alarm_sign');\n\nlet date1 = Datetime.Now().getDate();\nlet hub = Java.type('org.noear.water.protocol.ProtocolHub');\n                \nfor(let m of list){\n    \n    try{\n        let key2 = \"log_num__\" + m.logger;\n        let num2_old = XUtil.cfgGet(key2);\n        \n        let num2 = hub.logQuerier.stat(m.logger,5,date1);\n        \n        if(num2){\n            if(!num2_old || (parseInt(num2_old) != num2)){\n                let msg = `预警：错误日志数量::${num2}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n[${m.logger}][${alarm_sign}]`;\n                \n                water.heihei('@alarm,@'+m.tag,msg);\n                \n                XUtil.cfgSet(key2, num2+'');\n            }\n        }\n        \n    }catch(err){\n      XUtil.log({content:err.message});\n    }\n}\n\nreturn 'OK';","note":"日志-检查错误数量并告警","plan_state":9,"plan_begin_time":1595347200000,"plan_last_time":1636257180689,"plan_last_timespan":34,"plan_next_time":1636257240689,"plan_interval":"1m","plan_max":0,"plan_count":876,"create_fulltime":1595484753000,"update_fulltime":1635490325000,"use_whitelist":null},{"file_id":368,"file_type":1,"tag":"water","label":"","path":"/water/_service_runtime_pull","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let db2 = water.db(\"water/water\");\n\nlet serivers = db2.table(\"water_reg_service\").whereEq(\"check_type\",0).andEq('is_enabled',1).select(\"key,name,address\").getMapList();\nlet datetime = Datetime.Now();\n\n//let TrackBuffer = Java.type(\"org.noear.water.track.TrackBuffer\")\n\nfunction execDo(s1){\n   try{\n      let rst_str = XUtil.http(`http://${s1.address}/run/status/`).get();\n\n      if(rst_str && rst_str.startsWith(\"{\")){\n         let rst = JSON.parse(rst_str);\n\n         if(rst.data){\n            rst = rst.data;\n         }\n\n         if(!rst.memoryMax){\n            return;\n         }\n\n         water.logDebug(\"water_log_sev\", {tag: \"sev\", tag1:s1.address, tag2:s1.name, content:`App:: memoryMax:${rst.memoryMax} - memoryTotal:${rst.memoryTotal} - memoryUsed:${rst.memoryUsed} - threadCount:${rst.threadCount}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n${rst_str}`});\n\n         //TrackBuffer.singleton().appendCount(\"_watersrt\", \"service\", `${s1.name}@${s1.address}`, rst.memoryMax, rst.memoryTotal, rst.memoryUsed, rst.threadCount);\n         \n         db2.table(\"water_reg_service_runtime\")\n            .set(\"key\",s1.key)\n            .set(\"name\",s1.name)\n            .set(\"address\",s1.address)\n            .set(\"log_date\",datetime.getDate())\n            .set(\"log_hour\",datetime.getHours())\n            .set(\"log_minute\",datetime.getMinutes())\n            .set(\"log_fulltime\",\"$NOW()\")\n            .set(\"memory_max\", rst.memoryMax)\n            .set(\"memory_total\", rst.memoryTotal)\n            .set(\"memory_used\", rst.memoryUsed)\n            .set(\"thread_peak_count\", rst.threadPeakCount)\n            .set(\"thread_count\", rst.threadCount)\n            .set(\"thread_daemon_count\", rst.threadDaemonCount)\n            .insertBy(\"key,log_date,log_hour,log_minute\");\n      }\n   }catch(err){\n      XUtil.log(err);\n   }\n}\n\nserivers.parallelStream().forEach(execDo);\n\nreturn \"OK\";","note":"服务-运行时信息拉取","plan_state":9,"plan_begin_time":1600048619000,"plan_last_time":1636256880771,"plan_last_timespan":145,"plan_next_time":1636257239771,"plan_interval":"5m","plan_max":0,"plan_count":7567,"create_fulltime":1600046970000,"update_fulltime":1623136081000,"use_whitelist":null},{"file_id":369,"file_type":1,"tag":"water","label":"","path":"/water/_service_runtime_15d_del","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":" var db2 = water.db(\"water/water\");\n var date = Datetime.Now().addDay(-15).getDate();\n \n db2.table(\"water_reg_service_runtime\").where('log_date<?',date).delete();\n\n\n return 'OK';","note":"服务-运行时信息超时删除","plan_state":9,"plan_begin_time":1611072000000,"plan_last_time":1636256264288,"plan_last_timespan":1774,"plan_next_time":1636257600288,"plan_interval":"1h","plan_max":0,"plan_count":2587,"create_fulltime":1611124899000,"update_fulltime":1629278812000,"use_whitelist":null},{"file_id":370,"file_type":1,"tag":"water","label":"","path":"/water/msg_stat_sync","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let db2= water.db('water/water');\n\nlet date = Datetime.Now();\n\nlet yesterday = date.addDay(-1).getDate();\n\n\nlet list1 = db2.exe(\"list::SELECT name, total_num FROM water_reg_service_speed WHERE service=? AND TAG=?\",'_watermsg','topic');\nlet list2 = db2.exe(\"list::SELECT name, total_num FROM water_reg_service_speed_date WHERE service=? AND TAG=? AND log_date=?\",'_watermsg','topic',yesterday);\n\nfor(let m of list1){\n    db2.table('water_msg_topic')\n       .set('stat_msg_day_num',m.total_num)\n       .whereEq('topic_name',m.name)\n       .update();\n}\n\nfor(let m of list2){\n    db2.table('water_msg_topic')\n       .set('stat_msg_day_num','$stat_msg_day_num+'+m.total_num)\n       .whereEq('topic_name',m.name)\n       .update();\n}\n\nreturn 'OK';\n\n","note":"消息统计同步","plan_state":9,"plan_begin_time":1619193600000,"plan_last_time":1636256820378,"plan_last_timespan":191,"plan_next_time":1636257420378,"plan_interval":"10m","plan_max":0,"plan_count":5129,"create_fulltime":1619259883000,"update_fulltime":1635999845000,"use_whitelist":null},{"file_id":371,"file_type":1,"tag":"water","label":"","path":"/water/log_stat_sync","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let db2= water.db('water/water');\nlet date = Datetime.Now();\n\nlet yesterday = date.addDay(-1).getDate();\nlet beforeday = date.addDay(-1).getDate();\n\nlet list1 = db2.exe(\"list::SELECT name, total_num, total_num_slow5 FROM water_reg_service_speed WHERE service=? AND TAG=?\",'_waterlog','logger');\nlet list2 = db2.exe(\"list::SELECT name, total_num, total_num_slow5 FROM water_reg_service_speed_date WHERE service=? AND TAG=? AND log_date=?\",'_waterlog','logger',yesterday);\nlet list3 = db2.exe(\"list::SELECT name, total_num, total_num_slow5 FROM water_reg_service_speed_date WHERE service=? AND TAG=? AND log_date=?\",'_waterlog','logger',beforeday);\n\n\nfor(let m of list1){\n    db2.table('water_cfg_logger')\n       .set('row_num_today',m.total_num)\n       .set('row_num_today_error',m.total_num_slow5)\n       .whereEq('logger',m.name)\n       .update();\n}\n\nfor(let m of list2){\n    db2.table('water_cfg_logger')\n       .set('row_num_yesterday',m.total_num)\n       .set('row_num_yesterday_error',m.total_num_slow5)\n       .whereEq('logger',m.name)\n       .update();\n}\n\nfor(let m of list3){\n    db2.table('water_cfg_logger')\n       .set('row_num_beforeday',m.total_num)\n       .set('row_num_beforeday_error',m.total_num_slow5)\n       .whereEq('logger',m.name)\n       .update();\n}\n\nreturn 'OK';\n\n","note":"日志统计同步","plan_state":9,"plan_begin_time":1619193600000,"plan_last_time":1636256820378,"plan_last_timespan":612,"plan_next_time":1636257420378,"plan_interval":"10m","plan_max":0,"plan_count":5129,"create_fulltime":1619263264000,"update_fulltime":1619689957000,"use_whitelist":null},{"file_id":372,"file_type":1,"tag":"water","label":"","path":"/water/speed_sync","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let util = requireX('/water/speed_sync.fun');\n\nlet rd = water.rd('water/water_redis',5);\n\nlet rlist = rd.open1(function(ru){\n  return ru.key('monitor_keys').hashGetAll();\n});\n\nvar jlist = [];\nrlist.forEach(function(k,v){\n  jlist.push(k);\n});\n\nXUtil.log('monitor_keys.size = ' + jlist.length);\n\nlet now = new Datetime();\n\nlet log_date = now.toString('yyyyMMdd');\n\nfor(let i in jlist){\n  let ikey = jlist[i];\n  let dkey = ikey +'$'+ log_date;\n  \n  let dd = rd.open1((ru)=>{\n  return ru.key(dkey).hashGetAll();\n  });\n  \n  if(dd && dd.size()>0){\n    let ss = ikey.split('$');\n    let mm = util.map2json(dd);\n    \n    mm.service = ss[0];\n    mm.tag = ss[1];\n    mm.name_md5 = ss[2];\n    mm.name = WaterClient.Track.getName(mm.name_md5);\n    mm.name_md5 = WaterClient.Track.getNameMd5(mm.name_md5);//兼容旧的数据\n    mm.log_fulltime = rlist.get(ikey);\n\n    if(mm.name && mm.name.length > 900){\n      mm.name = mm.name.substr(0,900);\n    }\n\n  \n    if(mm.service && mm.service != 'null'){\n        util.speed_log(mm);\n    }\n  }\n}\n\n\nreturn 'OK';\n\n","note":"接口性能-从Reids同步概况数据","plan_state":9,"plan_begin_time":1588723200000,"plan_last_time":1636256820378,"plan_last_timespan":3675,"plan_next_time":1636257420378,"plan_interval":"10m","plan_max":0,"plan_count":5121,"create_fulltime":1588757925000,"update_fulltime":1619535119000,"use_whitelist":null},{"file_id":373,"file_type":1,"tag":"water","label":"","path":"/water/speed_sync_date","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let util = requireX('/water/speed_sync.fun');\n\nlet rd = water.rd('water/water_redis',5);\n\nlet rlist = rd.open1(function(ru){\n  return ru.key('monitor_keys').hashGetAll();\n});\n\nvar jlist = [];\nrlist.forEach(function(k,v){\n  jlist.push(k);\n});\n\nXUtil.log('monitor_keys.size = ' + jlist.length);\n\nlet now = new Datetime();\n\nlet log_date = now.toString('yyyyMMdd');\n\n\nfor(var i in jlist){\n  let ikey = jlist[i];\n  let dkey = ikey +'$'+ log_date;\n  \n  let dd = rd.open1((ru)=>{\n return ru.key(dkey).hashGetAll();\n  });\n  \n  if(dd && dd.size()>0){\n    let ss = ikey.split('$');\n    let mm = util.map2json(dd);\n    \n    mm.service = ss[0];\n    mm.tag = ss[1];\n    mm.name_md5 = ss[2];\n    mm.name = WaterClient.Track.getName(mm.name_md5);\n    mm.name_md5 = WaterClient.Track.getNameMd5(mm.name_md5);//兼容旧的数据\n    mm.log_date = log_date;\n\n    if(mm.name && mm.name.length > 900){\n      mm.name = mm.name.substr(0,900);\n    }\n  \n    if(mm.service && mm.service != 'null'){\n        util.speed_log_date(mm);\n    }\n  }\n}\n\n\n\nreturn 'OK';\n\n","note":"接口性能-从Reids同步日纬度数据","plan_state":9,"plan_begin_time":1588723200000,"plan_last_time":1636256820378,"plan_last_timespan":3687,"plan_next_time":1636257420378,"plan_interval":"10m","plan_max":0,"plan_count":5121,"create_fulltime":1588757936000,"update_fulltime":1619535129000,"use_whitelist":null},{"file_id":374,"file_type":1,"tag":"water","label":"","path":"/water/speed_sync_hour","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"let util = requireX('/water/speed_sync.fun');\n\nlet rd = water.rd('water/water_redis',5);\n\nlet rlist = rd.open1(function(ru){\n  return ru.key('monitor_keys').hashGetAll();\n});\n\nvar jlist = [];\nrlist.forEach(function(k,v){\n  jlist.push(k);\n});\n\nXUtil.log('monitor_keys.size = ' + jlist.length);\n\nlet now = new Datetime();\n\nlet log_date = now.toString('yyyyMMdd');\nlet log_hour = now.toString('HH');\n\n\nfor(let i in jlist){\n  let ikey = jlist[i];\n  let dkey = ikey +'$'+ log_date + log_hour;\n  \n  let dd = rd.open1((ru)=>{\n  return ru.key(dkey).hashGetAll();\n  });\n  \n  if(dd && dd.size()>0){\n    let ss = ikey.split('$');\n    let mm = util.map2json(dd);\n    \n    mm.service = ss[0];\n    mm.tag = ss[1];\n    mm.name_md5 = ss[2];\n    mm.name = WaterClient.Track.getName(mm.name_md5);\n    mm.name_md5 = WaterClient.Track.getNameMd5(mm.name_md5);//兼容旧的数据\n    mm.log_date = log_date;\n    mm.log_hour = log_hour;\n\n    if(mm.name && mm.name.length > 900){\n      mm.name = mm.name.substr(0,900);\n    }\n  \n    if(mm.service && mm.service != 'null'){\n        util.speed_log_hour(mm);\n    }\n  }\n}\n\n\nreturn 'OK';\n","note":"接口性能-从Reids同步时纬度数据","plan_state":9,"plan_begin_time":1588723200000,"plan_last_time":1636256820378,"plan_last_timespan":3669,"plan_next_time":1636257420378,"plan_interval":"10m","plan_max":0,"plan_count":5122,"create_fulltime":1588757945000,"update_fulltime":1619535195000,"use_whitelist":null},{"file_id":375,"file_type":1,"tag":"water","label":"","path":"/water/speed_sync.fun","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"this.map2json = function (map){\n  var obj = {};\n  map.forEach(function(k,v){\n    obj[k] = v;\n  });\n  \n  return obj;\n}\n\n\n\nthis.speed_log = function(m){\n    if(!m.tag || !m.name || !m.average){\n       return 'ERROR';\n    }\n    \n    if(!m.total_num_slow1){\n      m.total_num_slow1=0;\n    }\n    \n    if(!m.total_num_slow2){\n      m.total_num_slow2=0;\n    }\n    \n    if(!m.total_num_slow5){\n      m.total_num_slow5=0;\n    }\n    \n    if(!m.slowest){\n      m.slowest=0;\n    }\n    \n    if(!m.fastest){\n      m.fastest=0;\n    }\n    \n    water.db('water/water')\n      .table('water_reg_service_speed')\n      .set('average',m.average).set('fastest',m.fastest)\n      .set('slowest',m.slowest).set('total_num',m.total_num)\n      .set('service',m.service)\n      .set('tag',m.tag)\n      .set('name_md5',m.name_md5)\n      .set('name',m.name)\n      .set('total_num_slow1',m.total_num_slow1)\n      .set('total_num_slow2',m.total_num_slow2)\n      .set('total_num_slow5',m.total_num_slow5)\n      .build(function(tb){\n        if(m.log_fulltime && m.log_fulltime.indexOf('-')>0){\n        tb.set('last_updatetime',m.log_fulltime);\n      }\n      })\n      .upsert('service,tag,name_md5');\n    \n    return 'OK';\n}\n\nthis.speed_log_date = function(m){\n    if(!m.tag || !m.name || !m.average || !m.log_date){\n       return 'ERROR';\n    }\n    \n    if(!m.slowest){\n      m.slowest=0;\n    }\n    \n    if(!m.fastest){\n      m.fastest=0;\n    }\n    \n    if(m.total_time){\n       m.average = parseInt(m.total_time/m.total_num);\n    }\n    \n    water.db('water/water')\n      .table('water_reg_service_speed_date')\n      .set('average',m.average).set('fastest',m.fastest)\n      .set('slowest',m.slowest).set('total_num',m.total_num)\n      .set('service',m.service)\n      .set('tag',m.tag)\n      .set('name',m.name)\n      .set('name_md5',m.name_md5)\n      .set('log_date',m.log_date)\n      .build(function(tb){\n        if(m.total_num_slow1){\n        tb.set('total_num_slow1',m.total_num_slow1);\n      }\n      \n        if(m.total_num_slow2){\n       tb.set('total_num_slow2',m.total_num_slow2);\n      }\n      \n        if(m.total_num_slow5){\n       tb.set('total_num_slow5',m.total_num_slow5);\n      }\n      })\n      .upsert('service,tag,name_md5,log_date');\n    \n    return 'OK';    \n}\n\n\nthis.speed_log_hour = function(m){\n    if(!m.tag || !m.name || !m.average || !m.log_date || !m.log_hour){\n       return 'ERROR';\n    }\n    \n    if(!m.slowest){\n      m.slowest=0;\n    }\n    \n    if(!m.fastest){\n      m.fastest=0;\n    }\n    \n    water.db('water/water')\n      .table('water_reg_service_speed_hour')\n      .set('average',m.average).set('fastest',m.fastest)\n      .set('slowest',m.slowest).set('total_num',m.total_num)\n      .set('service',m.service)\n      .set('tag',m.tag)\n      .set('name',m.name)\n      .set('name_md5',m.name_md5)\n      .set('log_date',m.log_date)\n      .set('log_hour',m.log_hour)\n      .build(function(tb){\n        if(m.total_num_slow1){\n       tb.set('total_num_slow1',m.total_num_slow1);\n      }\n      \n        if(m.total_num_slow2){\n       tb.set('total_num_slow2',m.total_num_slow2);\n      }\n      \n        if(m.total_num_slow5){\n       tb.set('total_num_slow5',m.total_num_slow5);\n      }\n      })\n      .upsert('service,tag,name_md5,log_date,log_hour');\n    \n    \n    return 'OK';    \n}\n\n\n","note":"接口性能-公共函数","plan_state":1,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"1h","plan_max":0,"plan_count":0,"create_fulltime":1588758048000,"update_fulltime":1619192387000,"use_whitelist":null},{"file_id":377,"file_type":0,"tag":"_demo","label":"","path":"/_demo/test","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"// let db1 = water.db(\"water/water\");\n\n// let list = db1.sql(\"select * from water_reg_service limit 2\").getMapList();\n\n// for(let m1 of list){\n//     XUtil.log(ONode.stringify(m1));\n// }\n\n// return list;\n\n// let tmp = XUtil.http(\"http://h5.noear.org\").post();\n\n// return tmp;\n\n// let xxx = water.call(\"waterapi\",\"/run/check/\");\n\n// return xxx;\n\n// water.heihei(\"@alarm\",'xxx');\n\n// return ctx.param(\"name\",\"noear\");\n\nreturn \"xxx\";","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1628594556000,"update_fulltime":1636034343000,"use_whitelist":""},{"file_id":378,"file_type":3,"tag":"_demo","label":"@demo.topic.name","path":"/_demo/demo.topic.name","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"\nlet eventDo = ctx.attr('event'); //::MessageM{times,trace_id,key,topic,message,sgin,tags,toJson()}\n\nif(eventDo){\n    XUtil.log(\"event: \" + eventDo.toJson());\n    XUtil.log(\"event.message: \" + eventDo.message);\n}else{\n    XUtil.log(\"no event\")\n}\n\n\n//返回大写的OK，才算事件执行成功\nreturn 'OK';","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1629347371000,"update_fulltime":1635140948000,"use_whitelist":null},{"file_id":379,"file_type":1,"tag":"water","label":"","path":"/water/msg_alarm","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"\nlet hub = Java.type('org.noear.water.protocol.ProtocolHub');\n\nfor(let ms of hub.getMsgBrokerList()){\n    let num = ms.getSource().getWarnCount();\n\n    if(num > 10){\n        water.heihei('@alarm', '未派发消息数::'+num);\n    }\n}\n\n","note":"消息尝试告警","plan_state":9,"plan_begin_time":1609430400000,"plan_last_time":1636257180689,"plan_last_timespan":9,"plan_next_time":1636257240689,"plan_interval":"1m","plan_max":0,"plan_count":3962,"create_fulltime":1635997624000,"update_fulltime":1635998929000,"use_whitelist":null},{"file_id":380,"file_type":0,"tag":"water","label":"","path":"/water/code/generate","rank":0,"is_staticize":false,"is_editable":true,"is_disabled":false,"is_exclude":false,"link_to":null,"edit_mode":"javascript","content_type":"","content":"\nlet tag = ctx.param('tag');\nlet key = ctx.param('key');\nlet tb  = ctx.param(\"tb\");\n\nlet db2 = water.db(tag+'/'+key);\n\n\nlet tbs = XUtil.newList();\n\ndb2.getMetaData().getTableAll().forEach((tw)=>{\n    tbs.add(tw.getName());\n});\n\ntbs.sort(null);\n\nreturn {code: 1, msg:\"成功\", tbs: tbs};\n\n","note":"","plan_state":0,"plan_begin_time":null,"plan_last_time":null,"plan_last_timespan":0,"plan_next_time":0,"plan_interval":"","plan_max":0,"plan_count":0,"create_fulltime":1636241184000,"update_fulltime":1636244744000,"use_whitelist":""}]